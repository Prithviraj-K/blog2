{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tags-query-tsx.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tags-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Box, Flex } from \"theme-ui\"\n// @ts-ignore\nimport { kebabCase } from \"@lekoarts/themes-utils\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Seo from \"./seo\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\nexport type MBTagsProps = {\n  list: {\n    fieldValue: string\n    totalCount: number\n  }[]\n}\n\nconst Tags = ({ list }: MBTagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Heading as=\"h1\" variant=\"styles.h1\">\n        Tags\n      </Heading>\n      <Box mt={[4, 5]}>\n        {list.map((listItem) => (\n          <Flex key={listItem.fieldValue} mb={[1, 1, 2]} sx={{ alignItems: `center` }}>\n            <Link\n              sx={(t) => ({ ...t.styles?.a, variant: `links.listItem`, mr: 2 })}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${kebabCase(listItem.fieldValue)}`)}\n            >\n              {listItem.fieldValue} <span sx={{ color: `secondary` }}>({listItem.totalCount})</span>\n            </Link>\n          </Flex>\n        ))}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const Head: HeadFC = () => <Seo title=\"Tags\" />\n","import * as React from \"react\"\nimport Tags, { Head } from \"../../../components/tags\"\n\ntype Props = {\n  data: {\n    allPost: {\n      group: {\n        fieldValue: string\n        totalCount: number\n      }[]\n    }\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTags({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tags list={allPost.group} {...props} />\n}\n\nexport { Head }\n","import { graphql } from \"gatsby\"\nimport TagsComponent, { Head } from \"../components/tags\"\n\nexport default TagsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  {\n    allPost(sort: { tags: { name: DESC } }) {\n      group(field: { tags: { name: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["jsx","Heading","Box","Flex","kebabCase","Link","Layout","useMinimalBlogConfig","Seo","replaceSlashes","Tags","list","tagsPath","basePath","as","variant","mt","map","listItem","key","fieldValue","mb","sx","alignItems","t","_t$styles","styles","a","mr","to","color","totalCount","Head","title","React","MinimalBlogCoreTags","props","data","allPost","createElement","Object","assign","group","TagsComponent","query","withPrefix","useSiteMetadata","description","pathname","image","children","canonicalUrl","site","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","Fragment","lang","name","content","property","rel","type","sizes","href"],"sourceRoot":""}
var $YuyD3$path = require("path");
var $YuyD3$statoscopewebpackplugin = require("@statoscope/webpack-plugin");

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$export(module.exports, "pluginOptionsSchema", () => $a2465558a30729cb$export$d9cb174f67767fc9);
$parcel$export(module.exports, "onCreateWebpackConfig", () => $d5f7c907b9a858c6$export$a81ba122eda65d86);
const $a2465558a30729cb$export$d9cb174f67767fc9 = ({ Joi: Joi  })=>Joi.object({
        name: Joi.string().optional(),
        saveReportTo: Joi.string().optional(),
        saveStatsTo: Joi.string().optional(),
        normalizeStats: Joi.boolean().optional(),
        saveOnlyStats: Joi.boolean().optional(),
        disableReportCompression: Joi.boolean().optional(),
        additionalStats: Joi.array().items(Joi.string()).optional(),
        statsOptions: Joi.object().optional(),
        watchMode: Joi.boolean().optional(),
        open: Joi.alternatives().try(Joi.string().valid(`dir`, `file`), false).optional(),
        compressor: Joi.any().optional(),
        reports: Joi.any().optional(),
        extensions: Joi.any().optional()
    });




function $d0347e482a07aa60$var$isTruthy(value) {
    if (typeof value === `boolean`) return value;
    if (value === undefined || value === null) return false;
    if (value.toLowerCase() === `true`) return true;
    if (value.toLowerCase() === `false`) return false;
    const number = parseInt(value, 10);
    if (Number.isNaN(number)) return false;
    if (number > 0) return true;
    return false;
}
const $d0347e482a07aa60$export$fa6b64f5c6480188 = $d0347e482a07aa60$var$isTruthy(process.env.GATSBY_CLOUD);
const $d0347e482a07aa60$export$1bb53e9cacc85eac = `.statoscope`;


const $d5f7c907b9a858c6$export$a81ba122eda65d86 = ({ actions: actions , stage: stage , store: store  }, pluginOptions)=>{
    const root = store.getState().program.directory;
    const outputPath = $YuyD3$path.join(root, `public`, (0, $d0347e482a07aa60$export$1bb53e9cacc85eac));
    const isBuild = stage === `build-javascript`;
    const isDevelop = stage === `develop`;
    const statoscopeOptions = {
        saveReportTo: $YuyD3$path.join(outputPath, `report-[name]-[hash].html`),
        saveStatsTo: $YuyD3$path.join(outputPath, `stats-[name]-[hash].json`),
        name: `gatsby`,
        ...pluginOptions,
        ...(0, $d0347e482a07aa60$export$fa6b64f5c6480188) && {
            watchMode: false,
            open: false
        }
    };
    if (isDevelop && statoscopeOptions.watchMode || isBuild) actions.setWebpackConfig({
        plugins: [
            new (0, ($parcel$interopDefault($YuyD3$statoscopewebpackplugin)))(statoscopeOptions)
        ]
    });
};





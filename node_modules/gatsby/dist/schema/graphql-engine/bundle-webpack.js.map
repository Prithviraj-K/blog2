{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","getApisToRemoveForQueryEngine","apisToKeep","Set","schemaCustomizationAPIs","add","apisToRemove","Object","keys","nodeApis","filter","api","has","getInternalPackagesCacheDir","createInternalPackagesCacheDir","cacheDir","fs","ensureDir","emptyDir","packageJsonPath","outputJson","name","description","version","private","author","license","lmdbPackage","platform","arch","installPrebuiltLmdb","packageJson","modulePath","dirname","require","resolve","replace","JSON","parse","readFileSync","e","optionalDependencies","find","p","lmdbRequire","mod","createRequire","installIfMissingLmdb","undefined","options","stderr","npmAdditionalCliArgs","execa","dependencies","lmdb","createGraphqlEngineBundle","rootDir","reporter","isVerbose","schemaSnapshotString","readFile","printQueryEnginePlugins","assetRelocatorUseEntry","loader","outputAssetBase","gatsbyPluginTSRequire","alternativeLmdbPath","forcedLmdbBinaryModule","store","getState","adapter","instance","compiler","webpack","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","builtinModules","reduce","acc","builtinModule","module","rules","oneOf","test","parser","amd","use","forcedBinaryModule","remove","jsx","exclude","presets","byDependency","esm","fullySpecified","alias","inquirer","plugins","EnvironmentPlugin","DefinePlugin","stringify","SCHEMA_SNAPSHOT","env","GATSBY_SLICES","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","Boolean","Promise","reject","run","err","stats","getResourcePath","webpackModule","ConcatenatedModule","resource","modules","firstSubModule","iterateModules","webpackModules","compilation","resourcePath","importedBy","moduleGraph","getIssuer","structuredError","id","context","package","advisory","close","closeErr"],"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport execa, { Options as ExecaOptions } from \"execa\"\nimport webpack, { Module, NormalModule, Compilation } from \"webpack\"\nimport ConcatenatedModule from \"webpack/lib/optimize/ConcatenatedModule\"\nimport { dependencies } from \"gatsby/package.json\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { schemaCustomizationAPIs } from \"./print-plugins\"\nimport type { GatsbyNodeAPI } from \"../../redux/types\"\nimport * as nodeApis from \"../../utils/api-node-docs\"\nimport { store } from \"../../redux\"\nimport { PackageJson } from \"../../..\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.join(process.cwd(), `.cache`, `query-engine`)\nconst cacheLocation = path.join(\n  process.cwd(),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nfunction getApisToRemoveForQueryEngine(): Array<GatsbyNodeAPI> {\n  const apisToKeep = new Set(schemaCustomizationAPIs)\n  apisToKeep.add(`onPluginInit`)\n\n  const apisToRemove = (Object.keys(nodeApis) as Array<GatsbyNodeAPI>).filter(\n    api => !apisToKeep.has(api)\n  )\n  return apisToRemove\n}\n\nconst getInternalPackagesCacheDir = (): string =>\n  path.join(process.cwd(), `.cache/internal-packages`)\n\n// Create a directory and JS module where we install internally used packages\nconst createInternalPackagesCacheDir = async (): Promise<void> => {\n  const cacheDir = getInternalPackagesCacheDir()\n  await fs.ensureDir(cacheDir)\n  await fs.emptyDir(cacheDir)\n\n  const packageJsonPath = path.join(cacheDir, `package.json`)\n\n  await fs.outputJson(packageJsonPath, {\n    name: `gatsby-internal-packages`,\n    description: `This directory contains internal packages installed by Gatsby used to comply with the current platform requirements`,\n    version: `1.0.0`,\n    private: true,\n    author: `Gatsby`,\n    license: `MIT`,\n  })\n}\n\n// lmdb module with prebuilt binaries for our platform\nconst lmdbPackage = `@lmdb/lmdb-${process.platform}-${process.arch}`\n\n// Detect if the prebuilt binaries for lmdb have been installed. These are installed under @lmdb and are tied to each platform/arch. We've seen instances where regular installations lack these modules because of a broken lockfile or skipping optional dependencies installs\nfunction installPrebuiltLmdb(): boolean {\n  // Read lmdb's package.json, go through its optional depedencies and validate if there's a prebuilt lmdb module with a compatible binary to our platform and arch\n  let packageJson: PackageJson\n  try {\n    const modulePath = path\n      .dirname(require.resolve(`lmdb`))\n      .replace(`/dist`, ``)\n    const packageJsonPath = path.join(modulePath, `package.json`)\n    packageJson = JSON.parse(fs.readFileSync(packageJsonPath, `utf-8`))\n  } catch (e) {\n    // If we fail to read lmdb's package.json there's bigger problems here so just skip installation\n    return false\n  }\n  // If there's no lmdb prebuilt package for our arch/platform listed as optional dep no point in trying to install it\n  const { optionalDependencies } = packageJson\n  if (!optionalDependencies) return false\n  if (!Object.keys(optionalDependencies).find(p => p === lmdbPackage))\n    return false\n  try {\n    const lmdbRequire = mod.createRequire(require.resolve(`lmdb`))\n    lmdbRequire.resolve(lmdbPackage)\n    return false\n  } catch (e) {\n    return true\n  }\n}\n\n// Install lmdb's native system module under our internal cache if we detect the current installation\n// isn't using the pre-build binaries\nasync function installIfMissingLmdb(): Promise<string | undefined> {\n  if (!installPrebuiltLmdb()) return undefined\n\n  await createInternalPackagesCacheDir()\n\n  const cacheDir = getInternalPackagesCacheDir()\n  const options: ExecaOptions = {\n    stderr: `inherit`,\n    cwd: cacheDir,\n  }\n\n  const npmAdditionalCliArgs = [\n    `--no-progress`,\n    `--no-audit`,\n    `--no-fund`,\n    `--loglevel`,\n    `error`,\n    `--color`,\n    `always`,\n    `--legacy-peer-deps`,\n    `--save-exact`,\n  ]\n\n  await execa(\n    `npm`,\n    [`install`, ...npmAdditionalCliArgs, `${lmdbPackage}@${dependencies.lmdb}`],\n    options\n  )\n\n  return path.join(cacheDir, `node_modules`, lmdbPackage)\n}\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const assetRelocatorUseEntry = {\n    loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n    options: {\n      outputAssetBase: `assets`,\n    },\n  }\n\n  const gatsbyPluginTSRequire = mod.createRequire(\n    require.resolve(`gatsby-plugin-typescript`)\n  )\n\n  // Alternative lmdb path we've created to self heal from a \"broken\" lmdb installation\n  const alternativeLmdbPath = await installIfMissingLmdb()\n\n  // We force a specific lmdb binary module if we detected a broken lmdb installation or if we detect the presence of an adapter\n  let forcedLmdbBinaryModule: string | undefined = undefined\n  if (store.getState().adapter.instance) {\n    forcedLmdbBinaryModule = `${lmdbPackage}/node.abi83.glibc.node`\n  }\n  // We always force the binary if we've installed an alternative path\n  if (alternativeLmdbPath) {\n    forcedLmdbBinaryModule = `${alternativeLmdbPath}/node.abi83.glibc.node`\n  }\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n          acc[`node:${builtinModule}`] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n          acc[`node:${builtinModule}`] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          oneOf: [\n            {\n              // specific set of loaders for sharp\n              test: /node_modules[/\\\\]sharp[/\\\\].*\\.[cm]?js$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./sharp-bundling-patch`),\n                },\n              ],\n            },\n            {\n              // specific set of loaders for LMBD - our custom patch to massage lmdb to work with relocator -> relocator\n              test: /node_modules[/\\\\]lmdb[/\\\\].*\\.[cm]?js/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./lmdb-bundling-patch`),\n                  options: {\n                    forcedBinaryModule: forcedLmdbBinaryModule,\n                  },\n                },\n              ],\n            },\n            {\n              // specific set of loaders for gatsby-node files - our babel transform that removes lifecycles not needed for engine -> relocator\n              test: /gatsby-node\\.(cjs|mjs|js|ts)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(\n                    `../../utils/webpack/loaders/webpack-remove-exports-loader`\n                  ),\n                  options: {\n                    remove: getApisToRemoveForQueryEngine(),\n                    jsx: false,\n                  },\n                },\n              ],\n            },\n            {\n              // generic loader for all other cases than lmdb or gatsby-node - we don't do anything special other than using relocator on it\n              // For node binary relocations, include \".node\" files as well here\n              test: /\\.(cjs|mjs|js|ts|node)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: assetRelocatorUseEntry,\n            },\n          ],\n        },\n        {\n          test: /\\.ts$/,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n        {\n          test: /\\.(graphqls?|gqls?)$/,\n          use: {\n            loader: require.resolve(`graphql-tag/loader`),\n          },\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n        // only load one version of lmdb\n        lmdb: require.resolve(`lmdb`),\n        \"ts-node\": require.resolve(`./shims/ts-node`),\n        \"gatsby-sharp$\": require.resolve(`./shims/gatsby-sharp`),\n        \"graphql-import-node$\": require.resolve(`./shims/no-op-module`),\n        \"graphql-import-node/register$\":\n          require.resolve(`./shims/no-op-module`),\n        \"babel-runtime/helpers/asyncToGenerator\":\n          require.resolve(`./shims/no-op-module`), // undeclared dep of yurnalist (but used in code path we don't use)\n      },\n    },\n    plugins: [\n      new webpack.EnvironmentPlugin([`GATSBY_CLOUD_IMAGE_CDN`]),\n      new webpack.DefinePlugin({\n        // \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        \"process.env.NODE_ENV\": JSON.stringify(`production`),\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_SLICES\": JSON.stringify(\n          !!process.env.GATSBY_SLICES\n        ),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats): void => {\n      function getResourcePath(\n        webpackModule?: Module | NormalModule | ConcatenatedModule | null\n      ): string | undefined {\n        if (webpackModule && !(webpackModule instanceof ConcatenatedModule)) {\n          return (webpackModule as NormalModule).resource\n        }\n\n        if (webpackModule?.modules) {\n          // ConcatenatedModule is a collection of modules so we have to go deeper to actually get a path,\n          // at this point we won't know which one so we just grab first module here\n          const [firstSubModule] = webpackModule.modules\n          return getResourcePath(firstSubModule)\n        }\n\n        return undefined\n      }\n\n      function iterateModules(\n        webpackModules: Set<Module>,\n        compilation: Compilation\n      ): void {\n        for (const webpackModule of webpackModules) {\n          if (webpackModule instanceof ConcatenatedModule) {\n            iterateModules(\n              (webpackModule as ConcatenatedModule).modules,\n              compilation\n            )\n          } else {\n            const resourcePath = getResourcePath(webpackModule)\n            if (resourcePath?.includes(`ts-node`)) {\n              const importedBy = getResourcePath(\n                compilation.moduleGraph.getIssuer(webpackModule)\n              )\n              const structuredError = {\n                id: `98011`,\n                context: {\n                  package: `ts-node`,\n                  importedBy,\n                  advisory: `Gatsby is supporting TypeScript natively (see https://gatsby.dev/typescript). \"ts-node\" might not be needed anymore at all, consider removing it.`,\n                },\n              }\n              throw structuredError\n            }\n          }\n        }\n      }\n\n      try {\n        if (stats?.compilation.modules) {\n          iterateModules(stats.compilation.modules, stats.compilation)\n        }\n\n        compiler.close(closeErr => {\n          if (err) {\n            return reject(err)\n          }\n          if (closeErr) {\n            return reject(closeErr)\n          }\n          return resolve(stats?.compilation)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n"],"mappings":"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"}
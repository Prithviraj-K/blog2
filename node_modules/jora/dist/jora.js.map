{
  "version": 3,
  "sources": ["../src/index.js", "../src/version.js", "../src/utils/misc.js", "../src/lang/parse.js", "../src/lang/nodes/Arg1.js", "../src/lang/nodes/Array.js", "../src/lang/nodes/Assertion.js", "../src/lang/nodes/Binary.js", "../src/lang/nodes/Block.js", "../src/lang/nodes/Compare.js", "../src/lang/nodes/CompareFunction.js", "../src/lang/nodes/Conditional.js", "../src/lang/nodes/Context.js", "../src/lang/nodes/Current.js", "../src/lang/nodes/Data.js", "../src/lang/nodes/Declarator.js", "../src/lang/nodes/Definition.js", "../src/lang/build.js", "../src/lang/nodes/Filter.js", "../src/lang/nodes/Function.js", "../src/lang/nodes/GetProperty.js", "../src/lang/nodes/Identifier.js", "../src/lang/nodes/Literal.js", "../src/lang/nodes/Map.js", "../src/lang/nodes/MapRecursive.js", "../src/lang/nodes/Method.js", "../src/lang/nodes/MethodCall.js", "../src/lang/nodes/Object.js", "../src/lang/nodes/ObjectEntry.js", "../src/lang/nodes/Parentheses.js", "../src/lang/nodes/Pick.js", "../src/lang/nodes/Pipeline.js", "../src/lang/nodes/Placeholder.js", "../src/lang/nodes/Postfix.js", "../src/lang/nodes/Prefix.js", "../src/lang/nodes/Reference.js", "../src/lang/nodes/SliceNotation.js", "../src/lang/nodes/Spread.js", "../src/lang/nodes/Template.js", "../src/lang/nodes/index.js", "../src/lang/walk.js", "../src/lang/suggest.js", "../src/lang/stringify.js", "../src/lang/error.js", "../src/lang/compile.js", "../node_modules/@discoveryjs/natural-compare/src/index.js", "../src/utils/compare.js", "../src/lang/compile-buildin.js", "../src/utils/heap.js", "../src/utils/process-numeric-array.js", "../src/utils/percentile.js", "../src/utils/statistics.js", "../src/methods.js", "../src/assertions.js", "../src/stat.js"],
  "sourcesContent": ["import { version } from './version.js';\nimport { hasOwn } from './utils/misc.js';\nimport parser from './lang/parse.js';\nimport suggest from './lang/suggest.js';\nimport walk from './lang/walk.js';\nimport stringify from './lang/stringify.js';\nimport compile from './lang/compile.js';\nimport buildin from './lang/compile-buildin.js';\nimport methods from './methods.js';\nimport assertions from './assertions.js';\nimport createStatApi from './stat.js';\n\nconst cacheStrict = new Map();\nconst cacheStrictStat = new Map();\nconst cacheTollerant = new Map();\nconst cacheTollerantStat = new Map();\n\nfunction defineDictFunction(dict, name, fn, queryMethods, queryAssertions) {\n    if (typeof fn === 'string') {\n        Object.defineProperty(dict, name, {\n            configurable: true,\n            get() {\n                const compiledFn = compileFunction(fn)(buildin, queryMethods, queryAssertions);\n                const value = current => compiledFn(current, null);\n                Object.defineProperty(dict, name, { value });\n                return value;\n            }\n        });\n    } else {\n        dict[name] = fn;\n    }\n}\n\nfunction buildQueryMethodsAndAssertions(customMethods, customAssertions) {\n    if (!customMethods && !customAssertions) {\n        return {\n            queryMethods: methods,\n            queryAssertions: assertions\n        };\n    }\n\n    const queryMethods = { ...methods };\n    const queryAssertions = { ...assertions };\n\n    for (const [name, fn] of Object.entries(customMethods || {})) {\n        if (hasOwn(methods, name)) {\n            throw new Error(`Builtin method \"${name}\" can\\'t be overridden`);\n        }\n\n        defineDictFunction(queryMethods, name, fn, queryMethods, queryAssertions);\n    }\n\n    for (const [name, fn] of Object.entries(customAssertions || {})) {\n        if (hasOwn(assertions, name)) {\n            throw new Error(`Builtin assertion \"${name}\" can\\'t be overridden`);\n        }\n\n        defineDictFunction(queryAssertions, name, fn, queryMethods, queryAssertions);\n    }\n\n    return { queryMethods, queryAssertions };\n}\n\nfunction defaultDebugHandler(sectionName, value) {\n    console.log(`[${sectionName}]`);\n    if (typeof value === 'string') {\n        console.log(value);\n    } else if (value !== undefined) {\n        console.dir(value, { depth: null });\n    }\n    console.log();\n}\n\nfunction compileFunction(source, statMode, tolerantMode, debug) {\n    debug = typeof debug === 'function' ? debug : Boolean(debug) ? defaultDebugHandler : false;\n\n    if (debug) {\n        debug('=========================');\n        debug('Compile query from source', source);\n    }\n\n    const parseResult = parser.parse(source, tolerantMode);\n\n    if (debug) {\n        debug('AST', parseResult.ast);\n        debug('Restored source', stringify(parseResult.ast));\n    }\n\n    const suggestions = statMode\n        ? suggest(source, parseResult)\n        : null;\n\n    if (debug && suggestions) {\n        const esc = s => JSON.stringify(s).slice(1, -1);\n        const ranges = [].concat(...[...suggestions.entries()]\n            .map(([node, ranges]) => ranges.map(range => [node, ...range]))\n        );\n        let prevRange = [];\n        let prevPrefix = null;\n\n        debug('Stat/suggestion ranges', ranges.sort((a, b) => a[1] - b[1]).map(([node, ...range]) => {\n            const [start, end, type, related] = range;\n            let prelude;\n\n            if (start === prevRange[0] && end === prevRange[1]) {\n                prelude = ' '.repeat(prevPrefix.length);\n            } else {\n                const pre = esc(source.slice(0, start)).length;\n                const long = esc(source.substring(start, end)).length;\n\n                prevRange = range;\n                prevPrefix =\n                    ' '.repeat(pre) + (!long ? '\\\\' : '~'.repeat(long)) +\n                    ' ' + start + ':' + end;\n                prelude = esc(source) + '\\n' + prevPrefix;\n            }\n\n            return (\n                prelude + ' [' + type + '] on ' + node.type +\n                (related === true ? ' (current)' : related && related.type ? ' & ' + related.type : '')\n            );\n        }).join('\\n'));\n    }\n\n    const fn = compile(parseResult.ast, tolerantMode, suggestions);\n\n    if (debug) {\n        debug('Compiled code', fn.toString());\n    }\n\n    return fn;\n}\n\nfunction createQuery(source, options) {\n    options = options || {};\n\n    const statMode = Boolean(options.stat);\n    const tolerantMode = Boolean(options.tolerant);\n    const cache = statMode\n        ? (tolerantMode ? cacheTollerantStat : cacheStrictStat)\n        : (tolerantMode ? cacheTollerant : cacheStrict);\n    const { methods: customMethods, assertions: customAssertions } = options || {};\n    const { queryMethods, queryAssertions } =\n        buildQueryMethodsAndAssertions(customMethods, customAssertions);\n    let fn;\n\n    source = String(source);\n\n    if (cache.has(source) && !options.debug) {\n        fn = cache.get(source);\n    } else {\n        fn = compileFunction(source, statMode, tolerantMode, options.debug);\n        cache.set(source, fn);\n    }\n\n    fn = fn(buildin, queryMethods, queryAssertions);\n\n    return statMode\n        ? Object.assign((data, context) => createStatApi(source, fn(data, context)), { query: fn })\n        : fn;\n}\n\nfunction setup(options) {\n    const cacheStrict = new Map();\n    const cacheStrictStat = new Map();\n    const cacheTollerant = new Map();\n    const cacheTollerantStat = new Map();\n    const { methods: customMethods, assertions: customAssertions } = options || {};\n    const { queryMethods, queryAssertions } =\n        buildQueryMethodsAndAssertions(customMethods, customAssertions);\n\n    return function query(source, options) {\n        options = options || {};\n\n        const statMode = Boolean(options.stat);\n        const tolerantMode = Boolean(options.tolerant);\n        const cache = statMode\n            ? (tolerantMode ? cacheTollerantStat : cacheStrictStat)\n            : (tolerantMode ? cacheTollerant : cacheStrict);\n        let fn;\n\n        source = String(source);\n\n        if (cache.has(source) && !options.debug) {\n            fn = cache.get(source);\n        } else {\n            const perform = compileFunction(\n                source,\n                statMode,\n                tolerantMode,\n                options.debug\n            )(\n                buildin,\n                queryMethods,\n                queryAssertions\n            );\n            fn = statMode\n                ? Object.assign((data, context) => createStatApi(source, perform(data, context)), { query: perform })\n                : perform;\n            cache.set(source, fn);\n        }\n\n        return fn;\n    };\n}\n\nexport default Object.assign(createQuery, {\n    version,\n    buildin,\n    methods,\n    assertions,\n    setup,\n    syntax: {\n        tokenize: parser.tokenize,\n        parse: parser.parse,\n        suggest,\n        walk,\n        stringify,\n        compile\n    }\n});\n", "export const version = '1.0.0-beta.7';\n", "export const hasOwn = Object.hasOwn || ((subject, key) => Object.hasOwnProperty.call(subject, key));\nexport const toString = Object.prototype.toString;\n\nexport function addToSet(set, value) {\n    if (value !== undefined) {\n        if (Array.isArray(value)) {\n            value.forEach(item => set.add(item));\n        } else {\n            set.add(value);\n        }\n    }\n\n    return set;\n}\n\nexport function addToMapSet(map, key, value) {\n    if (map.has(key)) {\n        map.get(key).add(value);\n    } else {\n        map.set(key, new Set([value]));\n    }\n}\n\nexport function getPropertyValue(value, property) {\n    return value && hasOwn(value, property) ? value[property] : undefined;\n}\n\nexport function isPlainObject(value) {\n    return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\nexport function isRegExp(value) {\n    return toString.call(value) === '[object RegExp]';\n}\n\nexport function isArrayLike(value) {\n    return value && hasOwn(value, 'length') && isFinite(value.length);\n}\n\nexport function isTruthy(value) {\n    if (Array.isArray(value)) {\n        return value.length > 0;\n    }\n\n    if (isPlainObject(value)) {\n        for (const key in value) {\n            if (hasOwn(value, key)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    return Boolean(value);\n}\n", "/* parser generated by jison 0.4.18-remastered.7 */\n\nconst lexer = (function(){\n/* Lexer generated by jison 0.4.18-remastered.7 */\nconst lexer = {\nyy:{},\noptions: {\"ranges\":true},\nrules: [/^(?:\\/\\/.*?(?:\\n|\\r\\n?|\\u2028|\\u2029|$)|\\/\\*(?:.|\\s)*?(?:\\*\\/|$))/,/^\\s+/,/^\\//,/^<(?!=)/,/^/,(input, state) => {\n    if (input[0] !== (state === 'template' ? '}' : '`')) {\n        return null;\n    }\n\n    for (let i = 1; i < input.length; i++) {\n        if (input[i] === '`') {\n            return i + 1;\n        }\n\n        if (input[i] === '$' && input[i + 1] === '{') {\n            return i + 2;\n        }\n\n        if (input[i] === '\\\\') {\n            i++;\n        }\n    }\n\n    return null;\n},(input, state) => {\n    if (input[0] !== (state === 'template' ? '}' : '`')) {\n        return null;\n    }\n\n    for (let i = 1; i < input.length; i++) {\n        if (input[i] === '`') {\n            return i + 1;\n        }\n\n        if (input[i] === '$' && input[i + 1] === '{') {\n            return i + 2;\n        }\n\n        if (input[i] === '\\\\') {\n            i++;\n        }\n    }\n\n    return null;\n},/^/,/^\\(/,/^\\)/,/^\\[/,/^\\]/,/^\\{/,/^\\}/,/^(?:(true|false|null|undefined|Infinity|NaN)\\b)/,/^and\\b/,/^or\\b/,/^has\\s+no\\b/,/^has\\b/,/^in\\b/,/^not\\s+in\\b/,/^not\\b/,/^no\\b/,/^(?:(asc|desc)(NA?|AN?)?\\b)/,/^is\\b/,/^if\\b/,/^then\\b/,/^else\\b/,/^(?:(\\d+\\.|\\.)?\\d+([eE][-+]?\\d+)?\\b)/,/^0[xX][0-9a-fA-F]+/,/^(?:\"(?:\\\\[\\\\\"]|[^\"])*\")/,/^(?:'(?:\\\\[\\\\']|[^'])*')/,/^(?:\\/(?:\\\\.|[^/])+\\/[gimsu]*)/,/^(?:(?:[a-zA-Z_]|\\\\u[0-9a-fA-F]{4})(?:[a-zA-Z_$0-9]|\\\\u[0-9a-fA-F]{4})*)/,/^(?:\\$(?:[a-zA-Z_]|\\\\u[0-9a-fA-F]{4})(?:[a-zA-Z_$0-9]|\\\\u[0-9a-fA-F]{4})*)/,/^@/,/^#/,/^\\$\\$/,/^\\$/,/^=>/,/^<(?!=)/,/^=/,/^!=/,/^~=/,/^>=/,/^<=/,/^</,/^>/,/^\\.\\.\\(/,/^\\.\\(/,/^\\.\\[/,/^\\.\\.\\./,/^\\.\\./,/^\\./,/^\\?\\?/,/^\\?/,/^,/,/^:/,/^;/,/^\\-/,/^\\+/,/^\\*/,/^\\//,/^\\%/,/^(?:\\|)/,/^./,/^$/],\nconditions: {\"preventPrimitive\":{\"rules\":[0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],\"inclusive\":true},\"template\":{\"rules\":[6,7],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],\"inclusive\":true}},\nperformAction(yy,yy_,__lexelActionId,YY_START) {\n\nconst YYSTATE=YY_START;\nswitch (__lexelActionId) {\ncase 0:{yy.commentRanges.push(yy_.yylloc.range)\nbreak;}\ncase 1:{\nbreak;}\ncase 2:{this.popState(); return 39;\nbreak;}\ncase 3:{this.popState(); return 43;\nbreak;}\ncase 4:{this.done = false;\n            this.popState();\nbreak;}\ncase 5:{const token = yy_.yytext.endsWith('`') ? 'TEMPLATE' : 'TPL_START';\n            yy_.yytext = this.toStringLiteral(yy_.yytext, true, 1 + Number(token !== 'TEMPLATE'));\n            if (token === 'TEMPLATE') {\n                yy.pps();\n            }\n            return token;\nbreak;}\ncase 6:{const token = yy_.yytext.endsWith('`') ? 'TPL_END' : 'TPL_CONTINUE';\n            yy_.yytext = this.toStringLiteral(yy_.yytext, true, 1 + Number(token !== 'TPL_END'));\n            this.popState();\n            if (token === 'TPL_END') {\n                yy.pps();\n            }\n            return token;\nbreak;}\ncase 7:{this.parseError('Unexpected end of input');\nbreak;}\ncase 8:{return 64;\nbreak;}\ncase 9:{yy.pps(); return 65;\nbreak;}\ncase 10:{return 60;\nbreak;}\ncase 11:{yy.pps(); return 62;\nbreak;}\ncase 12:{return 82;\nbreak;}\ncase 13:{if (this.bracketStack[this.bracketStack.length - 1] !== 'TPL_END') {\n                yy.pps();\n                return 83;\n            }\n\n            this.unput('}');\n            this.begin('template');\nbreak;}\ncase 14:{yy_.yytext = this.toLiteral(yy_.yytext); // eslint-disable-line no-unused-vars\n            return 56;\nbreak;}\ncase 15:{return 35;\nbreak;}\ncase 16:{return 36;\nbreak;}\ncase 17:{return 34;\nbreak;}\ncase 18:{return 32;\nbreak;}\ncase 19:{return 31;\nbreak;}\ncase 20:{return 33;\nbreak;}\ncase 21:{return 25;\nbreak;}\ncase 22:{return 26;\nbreak;}\ncase 23:{return 92;\nbreak;}\ncase 24:{return 29;\nbreak;}\ncase 25:{return \"IF\";\nbreak;}\ncase 26:{return \"THEN\";\nbreak;}\ncase 27:{return \"ELSE\";\nbreak;}\ncase 28:{yy.pps(); yy_.yytext = Number(yy_.yytext); return 54;\nbreak;}\ncase 29:{yy.pps(); yy_.yytext = parseInt(yy_.yytext, 16); return 54;\nbreak;}\ncase 30:{yy.pps(); yy_.yytext = this.toStringLiteral(yy_.yytext); return 53;\nbreak;}\ncase 31:{yy.pps(); yy_.yytext = this.toStringLiteral(yy_.yytext); return 53;\nbreak;}\ncase 32:{yy.pps(); yy_.yytext = this.toRegExp(yy_.yytext); return 55;\nbreak;}\ncase 33:{yy.pps(); yy_.yytext = this.ident(yy_.yytext); return 14;\nbreak;}\ncase 34:{yy.pps(); yy_.yytext = this.ident(yy_.yytext.slice(1)); return 15;\nbreak;}\ncase 35:{yy.pps(); return 50;\nbreak;}\ncase 36:{yy.pps(); return 51;\nbreak;}\ncase 37:{yy.pps(); return 52;\nbreak;}\ncase 38:{yy.pps(); return 9;\nbreak;}\ncase 39:{return 22;\nbreak;}\ncase 40:{this.fnOpened++;\n            return 20;\nbreak;}\ncase 41:{return 41;\nbreak;}\ncase 42:{return 42;\nbreak;}\ncase 43:{return 47;\nbreak;}\ncase 44:{return 46;\nbreak;}\ncase 45:{return 44;\nbreak;}\ncase 46:{return 43;\nbreak;}\ncase 47:{if (this.fnOpened) {\n                this.fnOpened--;\n                return 21;\n            }\n            return 45;\nbreak;}\ncase 48:{return 70;\nbreak;}\ncase 49:{return 67;\nbreak;}\ncase 50:{return 68;\nbreak;}\ncase 51:{return 86;\nbreak;}\ncase 52:{yy.pps(); return 69;\nbreak;}\ncase 53:{yy.pps(); return 66;\nbreak;}\ncase 54:{return 37;\nbreak;}\ncase 55:{return 17;\nbreak;}\ncase 56:{return 72;\nbreak;}\ncase 57:{return 11;\nbreak;}\ncase 58:{return 10;\nbreak;}\ncase 59:{return 27;\nbreak;}\ncase 60:{return 28;\nbreak;}\ncase 61:{return 38;\nbreak;}\ncase 62:{return 39;\nbreak;}\ncase 63:{return 40;\nbreak;}\ncase 64:{return 24;\nbreak;}\ncase 65:{this.parseError(`Bad input on line ${yy_.yylloc.first_line} column ${yy_.yylloc.first_column}\\n` + this.showPosition(), {\n                text: yy_.yytext,\n                token: 'BAD_TOKEN'\n            });\nbreak;}\ncase 66:{return 5;\nbreak;}\n}\n},\n    setInput(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = false;\n        this._backtrack = false;\n        this.done = false;\n        this.currentCondition = 'INITIAL';\n        this.conditionStack = ['INITIAL'];\n        this.offset = 0;\n        this.yytext = this.match = '';\n        this.yyleng = 0;\n        this.yylineno = 0;\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n\n        if (true) {\n            this.yylloc.range = [0, 0];\n        }\n\n        return this;\n    },\n    parseError(str, details) {\n        if (!this.yy.parser) {\n            throw new Error(str);\n        }\n\n        this.yy.parser.parseError(str, details);\n    },\n    input() {\n        const ch = this._input[this.offset];\n        const newline = /\\n|\\r\\n?|\\u2028|\\u2029/g.test(ch);\n\n        this.offset++;\n        this.yyleng++;\n        this.yytext = this.match = this.yytext + ch;\n\n        if (newline) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n            this.yylloc.last_column = 0;\n        } else {\n            this.yylloc.last_column++;\n        }\n\n        if (true) {\n            this.yylloc.range[1]++;\n        }\n\n        return ch;\n    },\n    lineColumnForOffset(offset = this.offset, str = this._input, startLine = 1, startColumn = 0) {\n        const rx = /\\n|\\r\\n?|\\u2028|\\u2029/g;\n        let line = startLine;\n        let column = startColumn;\n        let prevLastIndex = 0;\n        let match;\n\n        while ((match = rx.exec(str)) !== null) {\n            if (match.index < offset) {\n                line++;\n                column = 0;\n                prevLastIndex = match.index + match[0].length;\n            } else {\n                column += offset - prevLastIndex;\n                prevLastIndex = -1;\n                break;\n            }\n        }\n\n        if (prevLastIndex !== -1) {\n            column += offset - prevLastIndex;\n        }\n\n        return {\n            line,\n            column\n        };\n    },\n    setMatch(start, end) {\n        const newMatch = this._input.slice(start, end);\n        const firstLoc = start !== this.offset ? this.lineColumnForOffset(start) : {\n            line: this.yylloc.last_line,\n            column: this.yylloc.last_column\n        };\n        const lastLoc = start !== end\n            ? this.lineColumnForOffset(end - start, newMatch, firstLoc.line, firstLoc.column)\n            : firstLoc;\n\n        this.yytext = this.match = newMatch;\n        this.yyleng = end - start;\n        this.offset = end;\n\n        this.yylineno = lastLoc.line - 1;\n        this.yylloc = {\n            first_line: firstLoc.line,\n            first_column: firstLoc.column,\n            last_line: lastLoc.line,\n            last_column: lastLoc.column\n        };\n\n        if (true) {\n            this.yylloc.range = [start, end];\n        }\n    },\n    less(n) {\n        const start = this.offset - this.match.length;\n\n        this.setMatch(start, start + n);\n    },\n    unput(chunk) {\n        const newMatchLength = this.match.length - chunk.length;\n\n        if (!this.match.startsWith(chunk, newMatchLength)) {\n            throw new Error('Lexer#unput() should receive a part of matched text only');\n        }\n\n        this.less(newMatchLength);\n    },\n    more() {\n        this._more = true;\n    },\n    reject() {\n        if (false) {\n            this._backtrack = true;\n            return;\n        }\n\n        // FIXME: remove method when options.backtrack_lexer is false\n        throw new Error('reject() is allowed only when options.backtrack_lexer = true');\n    },\n    showPosition(offset = this.offset - this.match.length) {\n        const input = this._input;\n        const start = Math.max(offset - 20, 0);\n        const end = Math.min(offset + 20, input.length);\n        const pre = (start === 0 ? '' : '...') + input.slice(start, offset).replace(/\\n|\\r\\n?|\\u2028|\\u2029/g, '\\\\n');\n        const post = input.slice(offset, end).replace(/\\n|\\r\\n?|\\u2028|\\u2029/g, '\\\\n') + (end === input.length ? '' : '...');\n\n        return (\n            pre +\n            post +\n            `\\n${'-'.repeat(pre.length)}^`\n        );\n    },\n    test_match(match, rule) {\n        let backup;\n\n        if (false) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylloc.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n\n            if (true) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this.setMatch(this.offset, this.offset + match[0].length);\n        this.matches = match;\n\n        // perform action\n        const token = this.performAction.call(\n            this,\n            this.yy,\n            this,\n            rule,\n            this.conditionStack[this.conditionStack.length - 1]\n        );\n\n        if (!token && this._backtrack) {\n            // recover context\n            Object.assign(this, backup);\n\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n\n        if (!this.eof()) {\n            this.done = false;\n        }\n\n        if (typeof token === 'number' && this.yy.parser) {\n            return this.yy.parser.terminals_[token];\n        }\n\n        return token || false;\n    },\n    eof() {\n        return this.offset === this._input.length;\n    },\n    next() {\n        if (this.done) {\n            return 1; // EOF\n        }\n\n        if (this.eof()) {\n            this.done = true;\n        }\n\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n\n        let match;\n        let matchRuleId;\n\n        for (const ruleId of this.conditions[this.currentCondition].rules) {\n            const rule = this.rules[ruleId];\n            const ruleInput = this._input.slice(this.offset);\n            let tempMatch;\n\n            if (typeof rule === 'function') {\n                const ret = rule(ruleInput, this.currentCondition);\n\n                switch (typeof ret) {\n                    case 'string': tempMatch = [ret]; break;\n                    case 'number': tempMatch = [ruleInput.slice(0, ret)]; break;\n                    default: tempMatch = ret;\n                }\n            } else {\n                tempMatch = ruleInput.match(rule);\n            }\n\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                matchRuleId = ruleId;\n\n                if (false) {\n                    const token = this.test_match(tempMatch, matchRuleId);\n\n                    if (token === false && this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    }\n\n                    // when token is false this is a lexer rule which consumes\n                    // input without producing a token (e.g. whitespace)\n                    return token;\n                }\n\n                if (!false) {\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            // when token is false this is a lexer rule which consumes\n            // input without producing a token (e.g. whitespace)\n            return this.test_match(match, matchRuleId);\n        }\n\n        if (this.eof()) {\n            return 1; // EOF\n        }\n\n        this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n            text: '',\n            token: null,\n            line: this.yylineno\n        });\n    },\n    lex() {\n        let token;\n\n        while (!token) {\n            token = this.next();\n        }\n\n        return token;\n    },\n    begin(condition) {\n        this.currentCondition = condition;\n        this.conditionStack.push(condition);\n    },\n    pushState(condition) {\n        this.begin(condition);\n    },\n    popState() {\n        this.conditionStack.pop();\n\n        return this.currentCondition = (this.conditionStack.length\n            ? this.conditionStack[this.conditionStack.length - 1]\n            : 'INITIAL'\n        );\n    },\n    topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        return n >= 0\n            ? this.conditionStack[n]\n            : 'INITIAL';\n    },\n    stateStackSize() {\n        return this.conditionStack.length;\n    }\n};\nreturn lexer;\n})();\n;\nfunction Parser() {\n  this.yy = {};\n}\nParser.prototype = {Parser,\nlexer,\nsymbols_: {\"error\":2,\"root\":3,\"block\":4,\"EOF\":5,\"definitions\":6,\"e\":7,\"def\":8,\"$\":9,\";\":10,\":\":11,\"$ident\":12,\"ident\":13,\"IDENT\":14,\"$IDENT\":15,\"condConsequent\":16,\"?\":17,\"condAlternate\":18,\"query\":19,\"FUNCTION_START\":20,\"FUNCTION_END\":21,\"FUNCTION\":22,\"compareFunction\":23,\"|\":24,\"NOT\":25,\"NO\":26,\"-\":27,\"+\":28,\"IS\":29,\"assertion\":30,\"IN\":31,\"HAS\":32,\"NOTIN\":33,\"HASNO\":34,\"AND\":35,\"OR\":36,\"??\":37,\"*\":38,\"/\":39,\"%\":40,\"=\":41,\"!=\":42,\"<\":43,\"<=\":44,\">\":45,\">=\":46,\"~=\":47,\"queryRoot\":48,\"relativePath\":49,\"@\":50,\"#\":51,\"$$\":52,\"STRING\":53,\"NUMBER\":54,\"REGEXP\":55,\"LITERAL\":56,\"template\":57,\"object\":58,\"array\":59,\"[\":60,\"sliceNotation\":61,\"]\":62,\"method()\":63,\"(\":64,\")\":65,\".\":66,\".(\":67,\".[\":68,\"..\":69,\"..(\":70,\"arguments\":71,\",\":72,\"templateString\":73,\"templateStart\":74,\"templateTail\":75,\"templateEnd\":76,\"templateContinue\":77,\"TEMPLATE\":78,\"TPL_START\":79,\"TPL_CONTINUE\":80,\"TPL_END\":81,\"{\":82,\"}\":83,\"objectEntries\":84,\"objectEntry\":85,\"...\":86,\"arrayElements\":87,\"arrayElement\":88,\"assertionTerm\":89,\"assertionList\":90,\"compareExpr\":91,\"ORDER\":92,\"sliceNotationComponent\":93,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"$\",10:\";\",11:\":\",14:\"IDENT\",15:\"$IDENT\",17:\"?\",20:\"FUNCTION_START\",21:\"FUNCTION_END\",22:\"FUNCTION\",24:\"|\",25:\"NOT\",26:\"NO\",27:\"-\",28:\"+\",29:\"IS\",31:\"IN\",32:\"HAS\",33:\"NOTIN\",34:\"HASNO\",35:\"AND\",36:\"OR\",37:\"??\",38:\"*\",39:\"/\",40:\"%\",41:\"=\",42:\"!=\",43:\"<\",44:\"<=\",45:\">\",46:\">=\",47:\"~=\",50:\"@\",51:\"#\",52:\"$$\",53:\"STRING\",54:\"NUMBER\",55:\"REGEXP\",56:\"LITERAL\",60:\"[\",62:\"]\",64:\"(\",65:\")\",66:\".\",67:\".(\",68:\".[\",69:\"..\",70:\"..(\",72:\",\",78:\"TEMPLATE\",79:\"TPL_START\",80:\"TPL_CONTINUE\",81:\"TPL_END\",82:\"{\",83:\"}\",86:\"...\",92:\"ORDER\"},\nproductions_: [0,[3,2],[4,2],[4,1],[4,1],[4,0],[6,1],[6,2],[8,2],[8,4],[8,2],[8,4],[13,1],[12,1],[16,2],[16,1],[18,2],[18,1],[18,0],[7,1],[7,3],[7,2],[7,1],[7,3],[7,4],[7,2],[7,2],[7,2],[7,2],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[7,3],[19,1],[19,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,3],[48,2],[48,2],[48,1],[48,1],[48,3],[48,4],[48,2],[48,2],[48,3],[48,3],[48,2],[48,2],[48,3],[49,3],[49,4],[49,4],[49,3],[49,3],[49,4],[49,4],[49,3],[49,3],[49,4],[63,3],[63,4],[63,3],[63,4],[71,1],[71,3],[57,1],[57,2],[75,1],[75,2],[75,2],[75,3],[73,1],[74,1],[77,1],[76,1],[58,2],[58,3],[58,4],[58,3],[58,4],[58,5],[84,1],[84,3],[85,1],[85,1],[85,1],[85,3],[85,3],[85,3],[85,3],[85,3],[85,5],[85,1],[85,2],[87,1],[87,3],[88,1],[88,1],[88,2],[59,2],[59,3],[59,4],[30,1],[30,2],[30,3],[30,4],[89,1],[89,1],[89,1],[89,1],[90,1],[90,3],[90,3],[23,1],[23,3],[91,2],[61,1],[61,2],[61,2],[61,3],[93,1],[93,2]],\ntable: (function unpackTable(tables) {\n    function unpackSubtable(table) {\n        // restore repetitions by ref\n        const refs = table.match(/[\\x20-\\x2f]/g);\n        const last = refs ? Math.max(...refs.map(ref => ref.charCodeAt() - 32)) : -1;\n        for (let i = last; i >= 0; i--) {\n            const idx = (32 + i).toString(16);\n            let pattern;\n            table = table\n                .replace(new RegExp('\\\\[\\\\x' + idx + '(.+?)\\\\]'), (_, repl) => (pattern = repl))\n                .replace(new RegExp('\\\\x' + idx, 'g'), pattern);\n        }\n\n        // restore repetitions\n        table = table.replace(/<([^>]+?)>/g, (_, p) => {\n            let n = d64[p[0]];\n            let offset = 1;\n\n            if (n >> 5 === 1) {\n                n = (n & 0b11111) | (d64[p[1]] << 5);\n                offset = 2;\n            }\n\n            return p.slice(offset).repeat(n);\n        });\n\n        return table;\n    }\n\n    function decodeNums(encoded) {\n        const nums = [];\n\n        for (let j = 0; j < encoded.length; j++) {\n            const b1 = d64[encoded[j]];\n\n            if (b1 & 0b100000) {\n                const b2 = d64[encoded[++j]];\n                nums.push((b1 & 0b11111) | (b2 << 5));\n            } else {\n                nums.push(b1);\n            }\n        }\n\n        return nums;\n    }\n\n    const e64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~|=';\n    const d64 = e64.split('').reduce((map, ch, idx) => (map[ch] = idx, map), Object.create(null));\n    const [indexTable, indexRows, ...stateTables] = tables.split('=').map(unpackSubtable);\n    const decodedIndexRows = indexRows.split(';').map(row => {\n        const states = [];\n\n        for (let i = 0; i < row.length; i++) {\n            for (let j = 0, chunk = d64[row[i]]; j < 3; j++) {\n                states.push((chunk >> (j * 2)) & 0b11);\n            }\n        }\n\n        return states;\n    });\n    const decodedStateTables = stateTables.map(decodeNums);\n    const result = decodeNums(indexTable).map(rowIdx => {\n        const rowIndexes = decodedIndexRows[rowIdx];\n        const row = Object.create(null);\n\n        for (let i = 0; i < rowIndexes.length; i++) {\n            const state = rowIndexes[i];\n\n            if (state !== 0) {\n                const ref = decodedStateTables[state - 1].shift();\n\n                row[i] = state === 1 ? ref : [state - 1, ref];\n            }\n        }\n\n        return row;\n    });\n\n    for (let i = 0; i < decodedStateTables[3].length; i += 2) {\n        result[decodedStateTables[3][i]][decodedStateTables[3][i + 1]] = [3];\n    }\n\n    return result;\n})(\"ABCDEFGHIJIIIIKLMMMN<KM>OPQRMSTUVTUMWXYNMZaEFSP<TI>QMbTUVTUcdMRIeeffFIFIgBhBMiBjBkBlBmBnBMMoBpB<FM>YgBqBrBRMsBt[ BhBRMt]BMMuBWMZMvBwBxByByBz<DB0>BI1B2B2BrBM<E3B>4B5Beff<D6B>7B7B<E8B>7BMM9<C >BMM~B|B|BMgChCMMiCjCjBkClCMpBmCnC2BMgCMqBMMMMWMMoCMvB<FI>pCqC2B<FM>FFMIMlBlCjCmCMPPMMMMxBxBzBMoCr<ECs>C0BhCMnCnCIMIsCsC=A1[ V[!C[\\\"lmkYoq]]]<GA>[#[$[%[&lqqVCJqK]U]['[(AKIAAE];]]A];Ag;AwU[)Clmkboq]<GA>[*lqqVy5qK]U'AwAA[+AkADCqo]<Fq>AAAAww<IA>g;AwADwzwP8|<GA>w||Az8|PAAP8[,[-w[.;AwA8A]][/wADD|8]]<F|>AAAAywqKDAwzAAw;AEV)<GA>#AE!<GA>#wA8A/<F|>AAAAzw|PCAwzAAw;AwAoA/<F|>AAAAzw|PDAwzAAw;AwAoA/<F|>AAAAz4|PDAwzAA,<F|>AAAAzw|PDAwzAA,<F|>AAAAz8|PDAwzAAw;AAEi\\\"<GA>lqqVmJqKUAKIgFEB;AAAChCAAIAB<HA>gAAI<HA>Q;AwAsAwBDD|8<F|>AAAAzw|PDAwzAA,<F|>AAAAz4|PDAwzAAw;AA <GA>#AAAlC<PA>B;AE <GA>lqqVC5qKU'AE <GA>lqqVyJqKU'AAE!<GA>%VqKAAE;AARClC<LA>giAC<GA>gl;AwE~lmkbrq8<F|>*XA67AA0;AAADwzwM8|<GA>w||ADM|PAA|P;M;AAEi\\\"<GA>lqqVmJqKU(B;<HA>C;AwA8+<Fq>AAAAzw|PDAwzAAg.0ADDqo6vqqqAAAAzw|PDAwzAA-0ADDv8|v6||AAAAzw|PDAwzAAw;AAE!<GA>lqqVCpqaU(<C;AAAAAAAAAAAAAAAAAAAAg>AAAC;AAAg<QA>w<KA>B;AAAgAkAACqo<Fq>AAAAwAAAD<FA>gB;<UA>wAAAD;AAEy\\\"<GA>lqqVyJqKU'AAE!<GA>lqqVyJqKX'AAAChC<MA>gAAI<HA>Q;AAAChCAAIAB<HA>gAAI<HA>QB;<FA>kAACqo<Fq><FA>g<IA>g;AAU!<GA>$<VA>I;<VA>g;<FA>kAACqo<Fq><JA>UgCAAg;<YA>CAAg;AAQClC<LA>giAC<GA>gl;<YA>DAAw;AAAo<UA>DAAw;AAAg<UA>DAAw;AAAg;AAAClmEAAg<GA>&XAK4.kADDqo<Fq>AAAAzw|PDAwzAA-0ADDq8|vqqqAAAAzw|PDAwzAA-0ADDqo6rqqqAAAAzw|PDAwzAA-0ADDqoqrqqqAAAAzw|PDAwzAA-0ADDv8<F|>AAAAzw|PDAwzAA-0ADDq8|v6r6AAAAzw|PDAwzAA-0ADDq8|v6||AAAAzw|PDAwzAAw;AAAgAkAACqo<Fq>AAAAg<JA>gB;<FA>kAACqo<Fq><OA>g;AAAIAkAACqo<Fq><OA>g;<VA>gAAC;<FA>kAACqo<Fq><FA>wAAD<FA>g;AAE!<GA>lqqViJqKUAKIgEE;<UA>w;AAAwAkAACqo<Fq>AAAAw<JA>g;<FA>kAACqo<Fq>AAAAwAAAD<FA>g;<LA>gC<IA>g;<LA>wD<IA>w;AAAClC<LA>giAC<GA>gk;<FA>kAACqo<Fq>AAAAg<JA>g;<UA>CAqKDAAw;AAAIAkAACqo<Fq><IA>DAAwAAg;<FA>kAACqo<Fq><IA>DAAwAAg=B[ C[!D[\\\"E[#F[$P[%[&['[(hBgBGJQRbcd]iB]pBqB]S]]]]]x]ByB$oCw CzC%1CzC%2CzC%3CzC%4CzC%iDzC(~C[)iBpBqB]gDjDShDsDmDnDuDyDxD#1DzD0D2D!3D!1D4D5D6D!9DzC&7D8D~DSjEFmEnEiEkEtEzC%oCvEu\\\"sDwEnDxEzC%yEzC%zEzC%0EzC%1EzC%2EzC%3EzC%4EzC%5EzC%6EzC%7EzC%8EzC%9EzC%~EzC%|EzC%gFzC%hFzC%iFzC%jFzC%kFmFzC(nF)ShD1DoFpFqF!rF!1DsFtFuF!oCxFzC&wF<EoC>yFzC%zF[*zC%2FzC']1FpBqBS6FoC7F8FzC%9FzC%sD~F[+sDhGnD]gGiG*kGpBqBSoCmGyB$oCqGrG[,9DzC&s]G8D~DSyBmEnEwGkE2GzC%zChBgB3GQRbcd)oCoC4GyB$<UoC>7F<EoC>kHzC&jHSlHoCoC+mHoCoC,H8D~DS[-wHnEuH]zHzC%0HzC%1HzC%2HzC%3[.HzC%oC]oC5.sD7HnDsD8HnD-<GoC>gIzC%hIzC%oCoC=[ [!O[\\\"[#[$[%tBTsBHIKLMN[&fUVWXYZae]]jB]['kBlBmBnBoBuBvB]]rB]]w]B![([)sBz[*B[+[,[-9B8B0B]1B2B3B4B]5B]6B[.7[/B~B|BgC]hCiCjCkClCmCnC]]]pC]qCrCsCtCuCvC!yC\\\"0C<EyC\\\">5C6C7C8C9CyCkD%|CjB'rBlDrDqDToDtDpDvDwD<C!tBT!>yC#gE|DrBlEtBToEpEqErEhEsEyC\\\"(!rDqDToDtDpD<TyC\\\">vDyCkD%lFjB'rBtBT<C!>tBT!vF(9CyC\\\"<C,~B|BgChCiCjCkClCmCnC><C0/><CyC\\\">yC$0F'rB3F4F5FkDkD(<CyC\\\">rDqDTtD|FrDqDToDtDpDyC\\\"yC$jG'rB)lGpC D9CnGoGwDpG)gE|DpCyC#gE|DrBuGtGlEtBToEpEqErEvGsE5C6C7CxGyGzG0G1GyC\\\"yCtBTsB&jB'rB<Cs*>!<E-~B|BgChCiCjCkClCmCnC>,.+.,~B|BgChCiCjCkClCmCn<CC0B~B|Bg>C<D0B><C-~B|BgCjCkClCmC><F-~B|BgC>jCkClCmCkD)5GpC6GwD7G8GwD9G(~G(|G(gHhH(yC%iHjB'rBlDkD<C(>rDqDToDtDpDoHpHnHs*qHhH)rHpCyC#gE|DrBvHtBToEpEqErEtHsEyHxH<FyC\\\">)4HpCqCrCsCtCuCvCs*yC\\\"(oHpH6H<CrDqDToDtDpD>9HvHtBToEpEqErE~HsE|G<F(>|H(<CyC\\\"><C(>=FDDDDEEEE<iBG><hBT>F<mBW><lB2B><lB4B><nByB><nBzB><nBuE><oBN><nB0B><nB1B><nB3B><nB5B><nB6B><nB7B><nB8B><nB9B><nB~B><nB|B><mBS><nBjC><nBkC>FFF<nB~C><dP><oBM><nBkD><elD>BCCCC<iBH><mBS><nBwE>FFF<QV><nB2B><nB4B><WZ><Wa><jBb><jBc><iBI><iBK><nBgE>xE9D9D7D7D1E1E~D~D<nBhC><nBjE><nBnE><nBoE><nBpE><nBqE><nBiC><dR><nBnC><nBoC><nBrC><nBsC><nB|C><nBgD><nBnD><emD><nBoD>uDu[ DwDwDxDxD]yDyD5D5D<SO><SX><nBd><ae><af><agB><ahB><ViB><UjB><WkB><jBlB><jBmB><mBnB><mBoB><mBpB><dqB><drB><hBsB><hBtB><hBuB><hBvB><dwB><nBxB><nBuC><nBxC><nByC><nB1C><nB2C><nBU><nBvE><nB6C>8C8C<nBgC><nBhE>yEzE2E2E|D|D<nBkE><DrE><SQ><nB4C><nBlC><nBpC><nBqC><nBtC><nBhD><nBiD><nBpD><nBrD>6D6D<SY><nBvC><nBwC><nBzC><nB0C><nB3C><iBJ><iBL><nB7C><nBiE>8D8D9D9D0<nBEl>E<nB5C><nBmC><nBjD><nBqD>vDv <nBsD>3D3DzDzD0D0D1D1D2D2D9C9C<nBmE><DsE><DtE><nBtD>3D3D4D4D=BB\"),\ndefaultActions: {48:[2,1],186:[2,146],229:[2,148]},\nperformAction(yytext,yyleng,yylineno,yy,yystate /* action[1] */,$$ /* vstack */,_$ /* lstack */) {\n/* this == yyval */\n\nconst $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn yy.buildResult($$[$0-1])\nbreak;\ncase 2:\nthis.$ = {type:\"Block\",definitions:$$[$0-1],body:$$[$0],range:this._$.range}\nbreak;\ncase 3:\nthis.$ = {type:\"Block\",definitions:$$[$0],body:{type:\"Placeholder\",range:[_$[$0].range[1],_$[$0].range[1]]},range:this._$.range}\nbreak;\ncase 4:\nthis.$ = {type:\"Block\",definitions:[],body:$$[$0],range:this._$.range}\nbreak;\ncase 5:\nthis.$ = {type:\"Block\",definitions:[],body:{type:\"Placeholder\",range:[_$[$0].range[1],_$[$0].range[1]]},range:this._$.range}\nbreak;\ncase 6: case 92: case 94: case 110: case 123: case 139: case 142:\nthis.$ = [$$[$0]]\nbreak;\ncase 7:\n$$[$0-1].push($$[$0])\nbreak;\ncase 8:\nthis.$ = {type:\"Definition\",declarator:{type:\"Declarator\",name:null,range:_$[$0-1].range},value:null,range:this._$.range}\nbreak;\ncase 9:\nthis.$ = {type:\"Definition\",declarator:{type:\"Declarator\",name:null,range:_$[$0-3].range},value:$$[$0-1],range:this._$.range}\nbreak;\ncase 10:\nthis.$ = {type:\"Definition\",declarator:{type:\"Declarator\",name:$$[$0-1].name,range:_$[$0-1].range},value:null,range:this._$.range}\nbreak;\ncase 11:\nthis.$ = {type:\"Definition\",declarator:{type:\"Declarator\",name:$$[$0-3].name,range:_$[$0-3].range},value:$$[$0-1],range:this._$.range}\nbreak;\ncase 12: case 13: case 135: case 136:\nthis.$ = {type:\"Identifier\",name:$$[$0],range:this._$.range}\nbreak;\ncase 14: case 16: case 150:\nthis.$ = $$[$0]\nbreak;\ncase 15: case 17: case 18: case 149:\nthis.$ = null\nbreak;\ncase 19: case 50: case 51: case 62: case 63: case 125:\n\nbreak;\ncase 20:\nthis.$ = {type:\"Function\",arguments:[],body:$$[$0-1],legacy:true,range:this._$.range}\nbreak;\ncase 21:\nthis.$ = {type:\"Function\",arguments:[],body:$$[$0],legacy:false,range:this._$.range}\nbreak;\ncase 22:\nthis.$ = {type:\"CompareFunction\",compares:$$[$0],range:this._$.range}\nbreak;\ncase 23:\nthis.$ = {type:\"Pipeline\",left:$$[$0-2],right:$$[$0],range:this._$.range}\nbreak;\ncase 24:\nthis.$ = {type:\"Pipeline\",left:$$[$0-3],right:{type:\"Block\",definitions:$$[$0-1],body:$$[$0]},range:this._$.range}\nbreak;\ncase 25: case 26: case 27: case 28: case 65:\nthis.$ = {type:\"Prefix\",operator:$$[$0-1],argument:$$[$0],range:this._$.range}\nbreak;\ncase 29:\nthis.$ = {type:\"Postfix\",operator:$$[$0],argument:$$[$0-2],range:this._$.range}\nbreak;\ncase 30: case 31: case 32: case 33: case 34: case 35: case 36: case 37: case 38: case 39: case 40: case 41: case 42: case 43: case 44: case 45: case 46: case 47: case 48:\nthis.$ = {type:\"Binary\",operator:$$[$0-1],left:$$[$0-2],right:$$[$0],range:this._$.range}\nbreak;\ncase 49:\nthis.$ = {type:\"Conditional\",test:$$[$0-2],consequent:$$[$0-1],alternate:$$[$0],range:this._$.range}\nbreak;\ncase 52:\nthis.$ = {type:\"Data\",range:this._$.range}\nbreak;\ncase 53:\nthis.$ = {type:\"Context\",range:this._$.range}\nbreak;\ncase 54:\nthis.$ = {type:\"Current\",range:this._$.range}\nbreak;\ncase 55:\nthis.$ = {type:\"Arg1\",range:this._$.range}\nbreak;\ncase 56:\nthis.$ = {type:\"Reference\",name:$$[$0],range:this._$.range}\nbreak;\ncase 57: case 58: case 59: case 60: case 100: case 101: case 102: case 103:\nthis.$ = {type:\"Literal\",value:$$[$0],range:this._$.range}\nbreak;\ncase 61:\nthis.$ = {type:\"Template\",values:$$[$0],range:this._$.range}\nbreak;\ncase 64:\nthis.$ = {type:\"SliceNotation\",value:null,arguments:$$[$0-1],range:this._$.range}\nbreak;\ncase 66:\nthis.$ = {type:\"Conditional\",test:null,consequent:$$[$0-1],alternate:$$[$0],range:this._$.range}\nbreak;\ncase 67: case 71:\nthis.$ = {type:\"GetProperty\",value:null,property:$$[$0],range:this._$.range}\nbreak;\ncase 68: case 72:\nthis.$ = {type:\"MethodCall\",value:null,method:$$[$0],range:this._$.range}\nbreak;\ncase 69:\nthis.$ = {type:\"Parentheses\",body:$$[$0-1],range:this._$.range}\nbreak;\ncase 70:\nthis.$ = {type:\"Parentheses\",body:{type:\"Block\",definitions:$$[$0-2],body:$$[$0-1]},range:this._$.range}\nbreak;\ncase 73:\nthis.$ = {type:\"Map\",value:null,query:$$[$0-1],range:this._$.range}\nbreak;\ncase 74:\nthis.$ = {type:\"Filter\",value:null,query:$$[$0-1],range:this._$.range}\nbreak;\ncase 75:\nthis.$ = {type:\"MapRecursive\",value:null,query:{type:\"GetProperty\",value:null,property:$$[$0]},range:this._$.range}\nbreak;\ncase 76:\nthis.$ = {type:\"MapRecursive\",value:null,query:{type:\"MethodCall\",value:null,method:$$[$0]},range:this._$.range}\nbreak;\ncase 77:\nthis.$ = {type:\"MapRecursive\",value:null,query:$$[$0-1],range:this._$.range}\nbreak;\ncase 78:\nthis.$ = {type:\"Pick\",value:$$[$0-2],getter:null,range:this._$.range}\nbreak;\ncase 79:\nthis.$ = {type:\"Pick\",value:$$[$0-3],getter:$$[$0-1],range:this._$.range}\nbreak;\ncase 80:\nthis.$ = {type:\"SliceNotation\",value:$$[$0-3],arguments:$$[$0-1],range:this._$.range}\nbreak;\ncase 81:\nthis.$ = {type:\"GetProperty\",value:$$[$0-2],property:$$[$0],range:this._$.range}\nbreak;\ncase 82:\nthis.$ = {type:\"MethodCall\",value:$$[$0-2],method:$$[$0],range:this._$.range}\nbreak;\ncase 83:\nthis.$ = {type:\"Map\",value:$$[$0-3],query:$$[$0-1],range:this._$.range}\nbreak;\ncase 84:\nthis.$ = {type:\"Filter\",value:$$[$0-3],query:$$[$0-1],range:this._$.range}\nbreak;\ncase 85:\nthis.$ = {type:\"MapRecursive\",value:$$[$0-2],query:{type:\"GetProperty\",value:null,property:$$[$0]},range:this._$.range}\nbreak;\ncase 86:\nthis.$ = {type:\"MapRecursive\",value:$$[$0-2],query:{type:\"MethodCall\",value:null,method:$$[$0]},range:this._$.range}\nbreak;\ncase 87:\nthis.$ = {type:\"MapRecursive\",value:$$[$0-3],query:$$[$0-1],range:this._$.range}\nbreak;\ncase 88:\nthis.$ = {type:\"Method\",reference:$$[$0-2],arguments:[],range:this._$.range}\nbreak;\ncase 89:\nthis.$ = {type:\"Method\",reference:$$[$0-3],arguments:$$[$0-1],range:this._$.range}\nbreak;\ncase 90:\nthis.$ = {type:\"Method\",reference:{type:\"Reference\",name:$$[$0-2]},arguments:[],range:this._$.range}\nbreak;\ncase 91:\nthis.$ = {type:\"Method\",reference:{type:\"Reference\",name:$$[$0-3]},arguments:$$[$0-1],range:this._$.range}\nbreak;\ncase 93: case 111: case 124: case 143:\n$$[$0-2].push($$[$0])\nbreak;\ncase 95:\nthis.$=[$$[$0-1], ...$$[$0]]\nbreak;\ncase 96: case 145:\nthis.$ = [null,$$[$0]]\nbreak;\ncase 97: case 147:\nthis.$ = [$$[$0-1],$$[$0]]\nbreak;\ncase 98:\nthis.$=[null, $$[$0-1], ...$$[$0]]\nbreak;\ncase 99:\nthis.$=[$$[$0-2], $$[$0-1], ...$$[$0]]\nbreak;\ncase 104: case 107:\nthis.$ = {type:\"Object\",properties:[],range:this._$.range}\nbreak;\ncase 105:\nthis.$ = {type:\"Object\",properties:$$[$0-1],range:this._$.range}\nbreak;\ncase 106:\nthis.$ = {type:\"Object\",properties:$$[$0-2],range:this._$.range}\nbreak;\ncase 108:\nthis.$ = {type:\"Block\",definitions:$$[$0-2],body:{type:\"Object\",properties:$$[$0-1]},range:this._$.range}\nbreak;\ncase 109:\nthis.$ = {type:\"Block\",definitions:$$[$0-3],body:{type:\"Object\",properties:$$[$0-2]},range:this._$.range}\nbreak;\ncase 112:\nthis.$ = {type:\"ObjectEntry\",key:{type:\"Current\"},value:null,range:this._$.range}\nbreak;\ncase 113:\nthis.$ = {type:\"ObjectEntry\",key:{type:\"Reference\",name:$$[$0]},value:null,range:this._$.range}\nbreak;\ncase 114:\nthis.$ = {type:\"ObjectEntry\",key:$$[$0],value:null,range:this._$.range}\nbreak;\ncase 115:\nthis.$ = {type:\"ObjectEntry\",key:$$[$0-2],value:$$[$0],range:this._$.range}\nbreak;\ncase 116: case 117: case 118:\nthis.$ = {type:\"ObjectEntry\",key:{type:\"Literal\",value:$$[$0-2]},value:$$[$0],range:this._$.range}\nbreak;\ncase 119:\nthis.$ = {type:\"ObjectEntry\",key:{type:\"Identifier\",name:\"$\" + $$[$0-2].name},value:$$[$0],range:this._$.range}\nbreak;\ncase 120:\nthis.$ = {type:\"ObjectEntry\",key:$$[$0-3],value:$$[$0],range:this._$.range}\nbreak;\ncase 121:\nthis.$ = {type:\"Spread\",query:null,array:false,range:this._$.range}\nbreak;\ncase 122:\nthis.$ = {type:\"Spread\",query:$$[$0],array:false,range:this._$.range}\nbreak;\ncase 126:\nthis.$ = {type:\"Spread\",query:null,array:true,range:this._$.range}\nbreak;\ncase 127:\nthis.$ = {type:\"Spread\",query:$$[$0],array:true,range:this._$.range}\nbreak;\ncase 128:\nthis.$ = {type:\"Array\",elements:[],range:this._$.range}\nbreak;\ncase 129:\nthis.$ = {type:\"Array\",elements:$$[$0-1],range:this._$.range}\nbreak;\ncase 130:\nthis.$ = {type:\"Array\",elements:$$[$0-2],range:this._$.range}\nbreak;\ncase 131:\nthis.$ = {type:\"Assertion\",negation:false,assertion:$$[$0],range:this._$.range}\nbreak;\ncase 132:\nthis.$ = {type:\"Assertion\",negation:true,assertion:$$[$0],range:this._$.range}\nbreak;\ncase 133:\nthis.$ = {type:\"Assertion\",negation:false,assertion:$$[$0-1],range:this._$.range}\nbreak;\ncase 134:\nthis.$ = {type:\"Assertion\",negation:true,assertion:$$[$0-1],range:this._$.range}\nbreak;\ncase 137:\nthis.$ = {type:\"Method\",reference:{type:\"Reference\",name:$$[$0]},arguments:[],range:this._$.range}\nbreak;\ncase 138:\nthis.$ = {type:\"Identifier\",name:String($$[$0]),range:this._$.range}\nbreak;\ncase 140: case 141:\n$$[$0-2].push($$[$0-1], $$[$0])\nbreak;\ncase 144:\nthis.$ = {type:\"Compare\",query:$$[$0-1],order:$$[$0],range:this._$.range}\nbreak;\ncase 146:\nthis.$ = [null,$$[$0-1],$$[$0]]\nbreak;\ncase 148:\nthis.$ = [$$[$0-2],$$[$0-1],$$[$0]]\nbreak;\n}\n},\ntrace(...args) {\n        if (this.DEBUG) {\n            Jison.print(...args);\n        }\n    },\nparseError(str, hash) {\n        if (hash.recoverable) {\n            this.trace(str);\n        } else {\n            const error = new Error(str);\n            error.hash = hash;\n            throw error;\n        }\n    },\nparse(input, ...parseArgs) {\n    // use own constants for source generation reasons\n    const SHIFT = 1;\n    const REDUCE = 2;\n    const ACCEPT = 3;\n    const TERROR = 2;\n    const EOF = 1;\n\n    const popStack = n => {\n        stack.length -= 2 * n;\n        vstack.length -= n;\n        lstack.length -= n;\n    };\n    const lex = /** @replace token stack */ () => {\n        let token = lexer.lex() || EOF;\n\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = this.symbols_[token] || token;\n        }\n\n        return token;\n    }; /** @replace */\n\n    const lexer = Object.create(this.lexer);\n    const ranges = lexer.options && lexer.options.ranges;\n    const sharedYY = { // shared state\n        ...this.yy,\n        parser: this,\n        lexer\n    };\n\n    lexer.setInput(input, sharedYY);\n\n    if (typeof sharedYY.parseError === 'function') {\n        this.parseError = sharedYY.parseError;\n    }\n\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n\n    const table = this.table;\n    const yyval = {};\n    let yylloc = lexer.yylloc;\n    const stack = [0];\n    const vstack = [null]; // semantic value stack\n    const lstack = [yylloc]; // location stack\n    // eslint-disable-next-line no-unused-vars\n    let tstack = []; // token stack, used when lex supports token stacks\n    let yytext = '';\n    let yylineno = 0;\n    let yyleng = 0;\n    let recovering = 0;\n    let symbol;\n    let preErrorSymbol;\n    while (true) {\n        // retreive state number from top of stack\n        let state = stack[stack.length - 1];\n        let action;\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n        // handle parse error\n        if (!action || !action[0]) {\n            let errorRuleDepth;\n            let errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                let stackProbe = stack.length - 1;\n                let depth = 0;\n\n                // try to recover from error\n                while (true) {\n                    // check for error recovery rule in this state\n                    if (TERROR.toString() in table[state]) {\n                        return depth;\n                    }\n\n                    if (state === 0 || stackProbe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n\n                    stackProbe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stackProbe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                \n\n                // Report error\n                const expected = [];\n                for (const p in table[state]) {\n                    if (p in this.terminals_ && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n\n                errStr = lexer.showPosition\n                    ? 'Parse error on line ' + (yylineno + 1) + ':\\n' +\n                        lexer.showPosition() + '\\n' +\n                        'Expecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\''\n                    : 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' +\n                        (symbol === EOF ? 'end of input' : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yylloc,\n                    \n                    expected\n                });\n            } else if (preErrorSymbol !== EOF) {\n                \n            }\n\n            // just recovered from another error\n            if (recovering === 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yylloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (errorRuleDepth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n\n            popStack(errorRuleDepth);\n            preErrorSymbol = symbol == TERROR ? null : symbol; // save the lookahead token\n            symbol = TERROR; // insert generic error symbol as new lookahead\n            state = stack[stack.length - 1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (Array.isArray(action[0]) && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n\n        switch (action[0]) {\n            case SHIFT:\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yylloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n\n                break;\n\n            case REDUCE: {\n                const len = this.productions_[action[1]][1];\n                const first = lstack[lstack.length - (len || 1)];\n                const last = lstack[lstack.length - 1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: first.first_line,\n                    last_line: last.last_line,\n                    first_column: first.first_column,\n                    last_column: last.last_column\n                };\n\n                if (ranges) {\n                    yyval._$.range = [\n                        first.range[0],\n                        last.range[1]\n                    ];\n                }\n\n                const actionResult = this.performAction.call(\n                    yyval,\n                    yytext,\n                    yyleng,\n                    yylineno,\n                    sharedYY,\n                    action[1],\n                    vstack,\n                    lstack,\n                    ...parseArgs\n                );\n\n                if (typeof actionResult !== 'undefined') {\n                    return actionResult;\n                }\n\n                // pop off stack\n                if (len) {\n                    popStack(len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                stack.push(table[stack[stack.length - 2]][stack[stack.length - 1]]);\n                break;\n            }\n\n            case ACCEPT:\n                return true;\n        }\n    }\n}};\nconst parser = (function buildParsers(strictParser) {\n    function patch(subject, patches) {\n        Object.entries(patches).forEach(([key, patch]) =>\n            subject[key] = patch(subject[key])\n        );\n    }\n\n    // better error details\n    const humanTokens = new Map([\n        ['EOF', ['<end of input>']],\n        ['IDENT', ['ident']],\n        ['$IDENT', ['$ident']],\n        ['FUNCTION_START', [\"'<'\"]],\n        ['FUNCTION_END', [\"'>'\"]],\n        ['FUNCTION', [\"'=>'\"]],\n        ['NOT', [\"'not'\"]],\n        ['NO', [\"'no'\"]],\n        ['IS', [\"'is'\"]],\n        ['THEN', [\"'then'\"]],\n        ['ELSE', [\"'else'\"]],\n        ['IN', [\"'in'\"]],\n        ['HAS', [\"'has'\"]],\n        ['NOTIN', [\"'not in'\"]],\n        ['HASNO', [\"'has no'\"]],\n        ['AND', [\"'and'\"]],\n        ['OR', [\"'or'\"]],\n        ['STRING', ['string']],\n        ['TPL_START', ['template']],\n        ['TEMPLATE', ['template']],\n        ['NUMBER', ['number']],\n        ['REGEXP', ['regexp']],\n        ['LITERAL', [\"'true'\", \"'false'\", \"'null'\", \"'undefined'\", \"'NaN'\", \"'Infinity'\"]],\n        ['ORDER', [\"'asc'\", \"'desc'\", \"'ascN'\", \"'descN'\"]]\n    ]);\n    const tokenForHumans = token => humanTokens.get(token) || `'${token}'`;\n    const parseError = function(rawMessage, details = {}, yy) {\n        if (details.recoverable) {\n            this.trace(rawMessage);\n        } else {\n            if (Array.isArray(details.inside)) {\n                const start = yy.lexer.offset - yy.lexer.match.length;\n\n                yy.lexer.setMatch(\n                    start + details.inside[0],\n                    start + details.inside[1]\n                );\n            }\n\n            const yylloc = yy.lexer.yylloc;\n            const message = [\n                rawMessage.split(/\\n/)[0],\n                '',\n                yy.lexer.showPosition()\n            ];\n            const expected = !Array.isArray(details.expected) ? null : [...new Set([].concat(\n                ...details.expected.map(token => tokenForHumans(token.slice(1, -1)))\n            ))];\n\n            if (expected) {\n                message.push(\n                    '',\n                    'Expecting ' + expected.join(', ') + ' got ' + tokenForHumans(details.token)\n                );\n            }\n\n            const error = new SyntaxError(message.join('\\n'));\n\n            error.details = {\n                rawMessage: rawMessage,\n                text: details.text,\n                token: details.token,\n                expected,\n                loc: {\n                    range: yylloc.range,\n                    start: {\n                        line: yylloc.first_line,\n                        column: yylloc.first_column,\n                        offset: yylloc.range[0]\n                    },\n                    end: {\n                        line: yylloc.last_line,\n                        column: yylloc.last_column,\n                        offset: yylloc.range[1]\n                    }\n                }\n            };\n\n            throw error;\n        }\n    };\n\n    // add new helpers to lexer\n    const lineTerminator = new Set(['\\n', '\\r', '\\u2028', '\\u2029']);\n    const literals = new Map([\n        ['undefined', undefined],\n        ['null', null],\n        ['false', false],\n        ['true', true],\n        ['Infinity', Infinity],\n        ['NaN', NaN]\n    ]);\n    Object.assign(strictParser.lexer, {\n        ident: value => value.replace(/\\\\u[0-9a-fA-F]{4}/g, m => String.fromCharCode(parseInt(m.slice(2), 16))),\n\n        toLiteral: value => literals.get(value),\n\n        toStringLiteral(value, multiline = false, end = 1) {\n            const valueEnd = value.length - end;\n            let result = '';\n\n            for (let i = 1; i < valueEnd; i++) {\n                if (!multiline && lineTerminator.has(value[i])) {\n                    this.parseError('Invalid line terminator', { inside: [i, i + 1] });\n                }\n\n                if (value[i] !== '\\\\') {\n                    result += value[i];\n                    continue;\n                }\n\n                if (i === valueEnd - 1) {\n                    this.parseError('Invalid backslash', { inside: [i, i + 1] });\n                }\n\n                const next = value[++i];\n                switch (next) {\n                    case '\\r':\n                        // ignore line terminator\n                        i += value[i + 1] === '\\n';  // \\r\\n\n                        break;\n\n                    case '\\n':\n                    case '\\u2028':\n                    case '\\u2029':\n                        // ignore line terminator\n                        break;\n\n                    case '0': result += '\\0'; break;\n                    case 'b': result += '\\b'; break;\n                    case 'n': result += '\\n'; break;\n                    case 'r': result += '\\r'; break;\n                    case 'f': result += '\\f'; break;\n                    case 't': result += '\\t'; break;\n                    case 'v': result += '\\v'; break;\n\n                    case 'u': {\n                        const [hex = ''] = value.slice(i + 1, i + 5).match(/^[0-9a-f]*/i) || [];\n\n                        if (hex.length === 4) {\n                            result += String.fromCharCode(parseInt(hex, 16));\n                            i += 4;\n                            break;\n                        }\n\n                        this.parseError('Invalid Unicode escape sequence', {\n                            inside: [i - 1, Math.min(i + 1 + hex.length, valueEnd)]\n                        });\n                        break;\n                    }\n\n                    case 'x': {\n                        const [hex = ''] = value.slice(i + 1, i + 3).match(/^[0-9a-f]*/i) || [];\n\n                        if (hex.length === 2) {\n                            result += String.fromCharCode(parseInt(hex, 16));\n                            i += 2;\n                            break;\n                        }\n\n                        this.parseError('Invalid hexadecimal escape sequence', {\n                            inside: [i - 1, Math.min(i + 1 + hex.length, valueEnd)]\n                        });\n                        break;\n                    }\n\n                    default:\n                        result += next;\n                }\n            }\n\n            return result;\n        },\n\n        toRegExp(value) {\n            const flagsIndex = value.lastIndexOf('/') + 1;\n            const flags = value.substr(flagsIndex);\n\n            flags.split('').forEach((flag, idx, array) => {\n                const duplicateIndex = array.indexOf(flag, idx + 1);\n                if (duplicateIndex !== -1) {\n                    this.parseError('Duplicate flag in regexp', {\n                        inside: [flagsIndex + duplicateIndex, flagsIndex + duplicateIndex + 1]\n                    });\n                }\n            });\n\n            return new RegExp(\n                value.substr(1, value.lastIndexOf('/') - 1),\n                flags\n            );\n        }\n    });\n\n    // patch setInput method to add additional lexer fields on init\n    patch(strictParser.lexer, {\n        setInput: origSetInput => function(input, yy) {\n            const commentRanges = [];\n\n            yy.commentRanges = commentRanges;\n            yy.buildResult = ast => ({\n                ast,\n                commentRanges\n            });\n            yy.parseError = function(...args) {\n                // parser doesn't expose sharedState and it's unavailable in parseError\n                return parseError.call(this, ...args, yy);\n            };\n            yy.pps = () => {\n                if (!this.eof()) {\n                    this.begin('preventPrimitive');\n                }\n            };\n\n            this.fnOpened = 0;\n            this.fnOpenedStack = [];\n            this.bracketStack = [];\n            this.prevToken = null;\n            this.prevYylloc = {\n                first_line: 1,\n                last_line: 1,\n                first_column: 0,\n                last_column: 0,\n                range: [0, 0]\n            };\n\n            return origSetInput.call(this, input, yy);\n        }\n    });\n\n    //\n    // tolerant parser\n    //\n    const tolerantParser = new strictParser.Parser();\n    tolerantParser.lexer = { ...strictParser.lexer };\n    tolerantParser.yy = { ...strictParser.yy };\n\n    // patch tolerant parser lexer\n    const keywords = [\n        'AND', 'OR', 'IN', 'NOTIN', 'HAS', 'HASNO',\n        'IS', 'THEN', 'ELSE'\n    ];\n    const words = [...keywords, 'NOT', 'NO', 'ORDER'];\n    const operators = [\n        '+', '-', '*', '/', '%', '|',\n        '=', '!=', '~=', '>=', '<=', '<', '>'\n    ];\n    const prev = [\n        null, '?', ':', ';',\n        ',', '.', '..',\n        '(', '[',\n        '.(', '..(', '.[',\n        'FUNCTION',\n        ...operators,\n        ...keywords,\n        'NOT', 'NO'\n    ];\n    const defaultNext = [\n        ',', '?', ':', ';', 'EOF',\n        ']', ')', '}',\n        'TPL_CONTINUE', 'TPL_END',\n        ...operators,\n        ...keywords,\n        'ORDER'\n    ];\n    const tokenPair = new Map(prev.map(token => [token, new Set(defaultNext)]));\n    // special cases\n    for (const token of ['(', '.(', '..(']) {\n        tokenPair.get(token).delete(')');\n    }\n    for (const token of ['[', '.[']) {\n        tokenPair.get(token).delete(']');\n    }\n\n    patch(tolerantParser.lexer, {\n        lex: origLex => function patchedLex() {\n            const prevOffset = this.offset;\n            const nextToken = origLex.call(this);\n\n            if (tokenPair.has(this.prevToken) && tokenPair.get(this.prevToken).has(nextToken)) {\n                const yylloc = {\n                    first_line: this.prevYylloc.last_line,\n                    last_line: this.yylloc.first_line,\n                    first_column: this.prevYylloc.last_column,\n                    last_column: this.yylloc.first_column,\n                    range: [this.prevYylloc.range[1], this.yylloc.range[0]]\n                };\n                this.unput(this.match);\n                this.pushState('preventPrimitive');\n                this.done = false;\n                this.yytext = '';\n                this.yylloc = this.prevYylloc = yylloc;\n\n                // position correction for a white space before a keyword\n                if (prevOffset !== this.offset && words.includes(nextToken)) {\n                    switch (this._input[prevOffset]) {\n                        case ' ':\n                        case '\\t':\n                            yylloc.last_column--;\n                            yylloc.range[1]--;\n                            break;\n\n                        case '\\n': {\n                            const lastN = this._input.lastIndexOf('\\n', prevOffset - 1);\n\n                            yylloc.last_line--;\n                            yylloc.last_column = lastN === -1\n                                ? yylloc.last_column - 1\n                                : prevOffset - lastN;\n                            yylloc.range[1]--;\n                            break;\n                        }\n                    }\n                }\n\n                return this.prevToken = 'IDENT';\n            }\n\n            this.prevYylloc = this.yylloc;\n\n            // position correction for a white space after a keyword\n            if (words.includes(nextToken)) {\n                switch (this._input[this.offset]) {\n                    case ' ':\n                    case '\\t':\n                        this.prevYylloc = {\n                            ...this.prevYylloc,\n                            last_column: this.prevYylloc.last_column + 1,\n                            range: [this.prevYylloc.range[0], this.prevYylloc.range[1] + 1]\n                        };\n                        break;\n\n                    case '\\n':\n                        this.prevYylloc = {\n                            ...this.prevYylloc,\n                            last_line: this.prevYylloc.last_line + 1,\n                            last_column: 0,\n                            range: [this.prevYylloc.range[0], this.prevYylloc.range[1] + 1]\n                        };\n                        break;\n                }\n            }\n\n            return this.prevToken = nextToken;\n        }\n    });\n\n    // bracket balance & scope\n    const openBalance = new Map([\n        ['(', ')'],\n        ['.(', ')'],\n        ['..(', ')'],\n        ['[', ']'],\n        ['.[', ']'],\n        ['{', '}'],\n        ['TPL_START', 'TPL_END']\n    ]);\n    const closeBalance = new Set([')', ']', '}', 'TPL_END']);\n    const balanceScopeLex = origLex => function patchedLex() {\n        const token = origLex.call(this);\n\n        if (closeBalance.has(token)) {\n            const expected = this.bracketStack.pop();\n\n            if (expected !== token) {\n                this.parseError(`Expected \"${expected}\" got \"${token}\"`);\n            }\n\n            this.fnOpened = this.fnOpenedStack.pop() || 0;\n        }\n\n        if (openBalance.has(token)) {\n            this.bracketStack.push(openBalance.get(token));\n            this.fnOpenedStack.push(this.fnOpened);\n            this.fnOpened = 0;\n        }\n\n        return token;\n    };\n    patch(strictParser.lexer, {\n        lex: balanceScopeLex\n    });\n    patch(tolerantParser.lexer, {\n        lex: balanceScopeLex\n    });\n\n    return {\n        parse(source, tolerantMode) {\n            return tolerantMode\n                ? tolerantParser.parse(source)\n                : strictParser.parse(source);\n        },\n        *tokenize(source, tolerantMode, loc) {\n            const parser = tolerantMode ? tolerantParser : strictParser;\n            const lexer = Object.create(parser.lexer);\n\n            lexer.setInput(source, { parser });\n\n            while (!lexer.done) {\n                const token = {\n                    type: lexer.lex(),\n                    value: lexer.match,\n                    offset: lexer.yylloc.range[0]\n                };\n\n                if (loc) {\n                    token.loc = {\n                        range: lexer.yylloc.range,\n                        start: {\n                            line: lexer.yylloc.first_line,\n                            column: lexer.yylloc.first_column\n                        },\n                        end: {\n                            line: lexer.yylloc.last_line,\n                            column: lexer.yylloc.last_column\n                        }\n                    };\n                }\n\n                yield token;\n            }\n        }\n    };\n})(new Parser);\n\nexport default parser;\n", "export function compile(node, ctx) {\n    ctx.put(ctx.scope.arg1 ? 'arguments[1]' : 'undefined');\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put('$$');\n}\n", "export function suggest(node, ctx) {\n    if (node.elements.length === 0) {\n        ctx.queryRoot(node.range[0] + 1, node.range[1] - 1);\n    }\n}\nexport function compile(node, ctx) {\n    ctx.put('[');\n    ctx.list(node.elements, ',');\n    ctx.put(']');\n}\nexport function walk(node, ctx) {\n    ctx.list(node.elements);\n}\nexport function stringify(node, ctx) {\n    ctx.put('[');\n    ctx.list(node.elements, ',');\n    ctx.put(']');\n}\n", "export function suggest(node, ctx) {\n    if (!Array.isArray(node.assertion)) {\n        ctx.range(node.assertion.range, 'var');\n        ctx.range(node.assertion.range, 'assertion');\n    }\n}\nexport function compile(node, ctx) {\n    if (Array.isArray(node.assertion)) {\n        ctx.put(node.negation ? '!(' : '(');\n\n        for (let i = 0; i < node.assertion.length; i++) {\n            if (i % 2 === 0) {\n                ctx.node(node.assertion[i]);\n            } else {\n                switch (node.assertion[i]) {\n                    case 'and':\n                        ctx.put('&&');\n                        break;\n                    case 'or':\n                        ctx.put('||');\n                        break;\n                    default:\n                        ctx.error('Bad conjuction operator in assertion', node);\n                }\n            }\n        }\n\n        ctx.put(')');\n    } else {\n        if (node.negation) {\n            ctx.put('!');\n        }\n\n        switch (node.assertion.type) {\n            case 'Identifier':\n                if (node.assertion.name) {\n                    ctx.put('!!');\n\n                    if (ctx.tolerant) {\n                        ctx.put('(typeof ');\n                    }\n\n                    ctx.put('a.');\n                    ctx.put(node.assertion.name);\n\n                    if (ctx.tolerant) {\n                        ctx.put('===\"function\"?a.');\n                        ctx.put(node.assertion.name);\n                    }\n\n                    ctx.put('(');\n                    ctx.nodeOrCurrent();\n                    ctx.put(')');\n\n                    if (ctx.tolerant) {\n                        ctx.put(':false)');\n                    }\n\n                    if (ctx.usedAssertions.has(node.assertion.name)) {\n                        ctx.usedAssertions.get(node.assertion.name).push(node.assertion.range);\n                    } else {\n                        ctx.usedAssertions.set(node.assertion.name, node.assertion.range);\n                    }\n                } else {\n                    ctx.put('false');\n                }\n\n                break;\n\n            case 'Method':\n                ctx.put('!!');\n                ctx.node(node.assertion);\n                break;\n\n            default:\n                ctx.error('Unknown assertion node type \"' + node.assertion.type + '\"', node.assertion);\n        }\n    }\n}\nexport function walk(node, ctx) {\n    if (Array.isArray(node.assertion)) {\n        for (let i = 0; i < node.assertion.length; i++) {\n            if (i % 2 === 0) {\n                ctx.node(node.assertion[i]);\n            }\n        }\n    } else {\n        ctx.node(node.assertion);\n    }\n}\nexport function stringify(node, ctx) {\n    if (node.negation) {\n        ctx.put('not ');\n    }\n\n    if (Array.isArray(node.assertion)) {\n        ctx.put('(');\n\n        for (let i = 0; i < node.assertion.length; i++) {\n            if (i % 2 === 0) {\n                ctx.node(node.assertion[i]);\n            } else {\n                ctx.put(' ');\n                ctx.put(node.assertion[i]);\n                ctx.put(' ');\n            }\n        }\n\n        ctx.put(')');\n    } else {\n        ctx.node(node.assertion);\n    }\n}\n", "const binary = {\n    'in': 'in',\n    'not in': 'notIn',\n    'has': 'has',\n    'has no': 'hasNo',\n    'and': 'and',\n    'or': 'or',\n    '??': 'nullish',\n    '+': 'add',\n    '-': 'sub',\n    '*': 'mul',\n    '/': 'div',\n    '%': 'mod',\n    '=': 'eq',\n    '!=': 'ne',\n    '<': 'lt',\n    '<=': 'lte',\n    '>': 'gt',\n    '>=': 'gte',\n    '~=': 'match'\n};\n\nfunction valueSubset(ctx, values, dict) {\n    if (dict.type === 'Array') {\n        if (dict.elements.length === 0) {\n            ctx.range([dict.range[0] + 1, dict.range[1] - 1], 'value-subset', values, false);\n            return;\n        }\n\n        const excludeValues = [];\n        for (const { type, range, value } of dict.elements) {\n            if (range && (type === 'Literal' || type === 'Identifier')) {\n                excludeValues.push(value);\n            }\n        }\n\n        const related = excludeValues.length ? ctx.literalList(excludeValues) : false;\n        for (const { type, range, value } of dict.elements) {\n            if (range) {\n                if (type === 'Literal' || type === 'Identifier' || (type === 'GetProperty' && value === null)) {\n                    ctx.range(range, 'value-subset', values, related);\n                }\n            }\n        }\n    }\n}\n\nexport function suggest(node, ctx) {\n    switch (node.operator) {\n        case 'in':\n            ctx.range(node.left.range, 'in-value', node.right, null);\n            valueSubset(ctx, node.left, node.right);\n            break;\n\n        case 'not in':\n            valueSubset(ctx, node.left, node.right);\n            break;\n\n        case 'has':\n            ctx.range(node.right.range, 'in-value', node.left, null);\n            valueSubset(ctx, node.right, node.left);\n            break;\n\n        case 'has no':\n            valueSubset(ctx, node.right, node.left);\n            break;\n\n        case '=':\n        case '!=':\n            ctx.range(node.right.range, 'value', node.left, null);\n            break;\n    }\n}\nexport function compile(node, ctx) {\n    if (node.operator in binary === false) {\n        ctx.error('Unknown operator \"' + node.operator + '\"', node);\n        return;\n    }\n\n    switch (node.operator) {\n        // separate branch since node.right might not to be evaluated (short-circuiting) when:\n        // - node.left is falsy for \"and\"\n        // - node.left is truthy for \"or\"\n        case 'and':\n            ctx.put('!');\n        case 'or': {\n            const tmpVar = ctx.allocateVar();\n\n            ctx.put(`${ctx.buildinFn('bool')}(${tmpVar}=`);\n            ctx.node(node.left);\n            ctx.put(`)?${tmpVar}:`);\n            ctx.scope.captureCurrent.disabled = true;\n            ctx.node(node.right);\n            ctx.scope.captureCurrent.disabled = false;\n            break;\n        }\n\n        // separate branch since node.right might not to be evaluated (short-circuiting)\n        // when node.left is null or undefined\n        case '??': {\n            const tmpVar = ctx.allocateVar();\n\n            ctx.put(`(${tmpVar}=`);\n            ctx.node(node.left);\n            ctx.put(`,${tmpVar}!==null&&${tmpVar}!==undefined)?${tmpVar}:`);\n            ctx.scope.captureCurrent.disabled = true;\n            ctx.node(node.right);\n            ctx.scope.captureCurrent.disabled = false;\n            break;\n        }\n\n        // separate branch since suggest should collect stat for node.right first\n        case 'has no':\n            ctx.put('!');\n        case 'has':\n            ctx.put(ctx.buildinFn('in'));\n            ctx.put('(');\n            ctx.node(node.right);\n            ctx.put(',');\n            ctx.node(node.left);\n            ctx.put(')');\n            break;\n\n        default:\n            ctx.put(ctx.buildinFn(binary[node.operator]));\n            ctx.put('(');\n            ctx.node(node.left);\n            ctx.put(',');\n            ctx.node(node.right);\n            ctx.put(')');\n    }\n}\nexport function walk(node, ctx) {\n    ctx.node(node.left);\n    ctx.node(node.right);\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.left);\n\n    if (/^[a-z]/i.test(node.operator)) {\n        ctx.put(' ');\n        ctx.put(node.operator);\n        ctx.put(' ');\n    } else {\n        ctx.put(node.operator);\n    }\n\n    ctx.node(node.right);\n}\n", "export function suggest(node, ctx) {\n    if (node.body === null) {\n        ctx.queryRoot(node.range[1]);\n    }\n}\nexport function compile(node, ctx) {\n    if (node.definitions.length) {\n        ctx.createScope(\n            () => {\n                ctx.put('(()=>{');\n                ctx.list(node.definitions);\n                ctx.put('return ');\n                ctx.nodeOrCurrent(node.body);\n                ctx.put('})()');\n            },\n            (scopeStart, sp) => {\n                return scopeStart + sp + ';';\n            }\n        );\n    } else if (node.body && node.body.type === 'Object') {\n        ctx.put('(');\n        ctx.nodeOrCurrent(node.body);\n        ctx.put(')');\n    } else {\n        ctx.nodeOrCurrent(node.body);\n    }\n}\nexport function walk(node, ctx) {\n    ctx.list(node.definitions);\n    ctx.nodeOrNothing(node.body);\n}\nexport function stringify(node, ctx) {\n    ctx.list(node.definitions);\n    ctx.nodeOrNothing(node.body);\n}\n", "const comparator = {\n    '': 'cmp',\n    'N': 'cmpNatural',\n    'A': 'cmpAnalytical',\n    'NA': 'cmpNaturalAnalytical',\n    'AN': 'cmpNaturalAnalytical'\n};\n\nexport function compile(node, ctx) {\n    if (node.order.startsWith('desc')) {\n        ctx.put('-');\n    }\n\n    ctx.createScope(\n        () => {\n            const cmpFn = comparator[node.order.slice(3 + node.order.startsWith('desc'))] || comparator[''];\n\n            ctx.put(ctx.buildinFn(cmpFn));\n            ctx.put('((_q=$=>(');\n            ctx.node(node.query);\n            ctx.put('))(a),_q(b))');\n        },\n        (scopeStart, sp) => {\n            return scopeStart + sp + ',';\n        }\n    );\n}\nexport function walk(node, ctx) {\n    ctx.node(node.query);\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.query);\n    ctx.put(' ');\n    ctx.put(node.order);\n}\n", "export function compile(node, ctx) {\n    ctx.put('(a, b)=>{let _q;return ');\n    ctx.list(node.compares, '||');\n    ctx.put('||0}');\n}\nexport function walk(node, ctx) {\n    ctx.list(node.compares);\n}\nexport function stringify(node, ctx) {\n    ctx.list(node.compares, ',');\n}\n", "export function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('bool'));\n    ctx.put('(');\n    ctx.scope.captureCurrent.disabled = true;\n    ctx.nodeOrCurrent(node.test);\n    ctx.put(')?');\n    ctx.nodeOrCurrent(node.consequent);\n    ctx.put(':');\n    if (node.alternate) {\n        ctx.node(node.alternate);\n    } else {\n        ctx.put('undefined');\n    }\n    ctx.scope.captureCurrent.disabled = false;\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.test);\n    ctx.nodeOrNothing(node.consequent);\n    ctx.nodeOrNothing(node.alternate);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.test);\n    ctx.put('?');\n    ctx.nodeOrNothing(node.consequent);\n\n    if (node.alternate) {\n        ctx.put(':');\n        ctx.node(node.alternate);\n    }\n}\n", "export function compile(node, ctx) {\n    ctx.put('context');\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put('#');\n}\n", "export function suggest(node, ctx) {\n    if (node.range) {\n        ctx.range(node.range, 'var');\n    }\n}\nexport function compile(node, ctx) {\n    ctx.put('$');\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put('$');\n}\n", "export function compile(node, ctx) {\n    ctx.put('data');\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put('@');\n}\n", "export function compile(node, ctx) {\n    if (node.name) {\n        ctx.put('$' + node.name);\n    }\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put(node.name ? '$' + node.name : '$');\n}\n", "import { GetProperty, Identifier } from '../build.js';\n\nconst reservedVars = ['data', 'context', 'ctx', 'array', 'idx', 'index'];\n\nexport function suggest(node, ctx) {\n    if (node.value === null) {\n        ctx.range(node.declarator.range, 'path');\n    }\n}\nexport function compile(node, ctx) {\n    if (node.declarator.name === null) {\n        ctx.node(node.declarator);\n        ctx.nodeOrCurrent(node.value);\n        ctx.put(';');\n        return;\n    }\n\n    if (ctx.scope.own.includes(node.declarator.name)) {\n        ctx.error(`Identifier \"$${node.declarator.name}\" has already been declared`, node.declarator);\n        return;\n    }\n\n    if (reservedVars.includes(node.declarator.name)) {\n        ctx.error(`Identifier \"$${node.declarator.name}\" is reserved for future use`, node.declarator);\n        return;\n    }\n\n    ctx.put('const ');\n    ctx.node(node.declarator);\n    ctx.put('=');\n    ctx.node(node.value || GetProperty(null, Identifier(node.declarator.name)));\n    ctx.put(';');\n\n    ctx.scope.push(node.declarator.name);\n    ctx.scope.own.push(node.declarator.name);\n}\nexport function walk(node, ctx) {\n    ctx.node(node.declarator);\n    ctx.nodeOrNothing(node.value);\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.declarator);\n\n    if (node.value !== null) {\n        ctx.put(':');\n        ctx.node(node.value);\n    }\n\n    ctx.put(';');\n}\n", "export function Arg1() {\n    return {\n        type: 'Arg1'\n    };\n};\nexport function Array(elements) {\n    return {\n        type: 'Array',\n        elements\n    };\n};\nexport function Assertion(assertion, negation = false) {\n    return {\n        type: 'Assertion',\n        negation,\n        assertion\n    };\n};\nexport function Binary(operator, left, right) {\n    return {\n        type: 'Binary',\n        operator,\n        left,\n        right\n    };\n};\nexport function Block(definitions, body) {\n    return {\n        type: 'Block',\n        definitions,\n        body\n    };\n};\nexport function Compare(query, order) {\n    return {\n        type: 'Compare',\n        query,\n        order\n    };\n};\nexport function CompareFunction(compares) {\n    return {\n        type: 'CompareFunction',\n        compares\n    };\n};\nexport function Conditional(test, consequent, alternate) {\n    return {\n        type: 'Conditional',\n        test,\n        consequent,\n        alternate\n    };\n};\nexport function Context() {\n    return {\n        type: 'Context'\n    };\n};\nexport function Current() {\n    return {\n        type: 'Current'\n    };\n};\nexport function Data() {\n    return {\n        type: 'Data'\n    };\n};\nexport function Declarator(name) {\n    return {\n        type: 'Declarator',\n        name\n    };\n};\nexport function Definition(declarator, value) {\n    return {\n        type: 'Definition',\n        declarator,\n        value\n    };\n};\nexport function Filter(value, query) {\n    return {\n        type: 'Filter',\n        value,\n        query\n    };\n};\nexport function Function(args, body, legacy) {\n    return {\n        type: 'Function',\n        arguments: args,\n        body,\n        legacy: Boolean(legacy)\n    };\n};\nexport function GetProperty(value, property) {\n    return {\n        type: 'GetProperty',\n        value,\n        property\n    };\n};\nexport function Identifier(name) {\n    return {\n        type: 'Identifier',\n        name\n    };\n};\nexport function Literal(value) {\n    return {\n        type: 'Literal',\n        value\n    };\n};\nexport function Map(value, query) {\n    return {\n        type: 'Map',\n        value,\n        query\n    };\n};\nexport function MapRecursive(value, query) {\n    return {\n        type: 'MapRecursive',\n        value,\n        query\n    };\n};\nexport function Method(reference, args) {\n    return {\n        type: 'Method',\n        reference,\n        arguments: args\n    };\n};\nexport function MethodCall(value, method) {\n    return {\n        type: 'MethodCall',\n        value,\n        method\n    };\n};\nexport function Object(properties) {\n    return {\n        type: 'Object',\n        properties\n    };\n};\nexport function ObjectEntry(key, value) {\n    return {\n        type: 'ObjectEntry',\n        key,\n        value\n    };\n};\nexport function Parentheses(body) {\n    return {\n        type: 'Parentheses',\n        body\n    };\n};\nexport function Pick(value, getter) {\n    return {\n        type: 'Pick',\n        value,\n        getter\n    };\n};\nexport function Pipeline(left, right) {\n    return {\n        type: 'Pipeline',\n        left,\n        right\n    };\n};\nexport function Placeholder() {\n    return {\n        type: 'Placeholder'\n    };\n};\nexport function Postfix(argument, operator) {\n    return {\n        type: 'Postfix',\n        operator,\n        argument\n    };\n};\nexport function Prefix(operator, argument) {\n    return {\n        type: 'Prefix',\n        operator,\n        argument\n    };\n};\nexport function Reference(name) {\n    return {\n        type: 'Reference',\n        name\n    };\n};\nexport function SliceNotation(value, args) {\n    return {\n        type: 'SliceNotation',\n        value,\n        arguments: args\n    };\n};\nexport function Spread(query, array = false) {\n    return {\n        type: 'Spread',\n        query,\n        array\n    };\n};\nexport function Template(values) {\n    return {\n        type: 'Template',\n        values\n    };\n};\n", "export function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('filter'));\n    ctx.put('(');\n    ctx.nodeOrCurrent(node.value);\n    ctx.createScope(\n        () => {\n            ctx.put(',$=>');\n            ctx.node(node.query);\n        },\n        (scopeStart, sp) => {\n            ctx.put(')');\n            return scopeStart + '(' + sp + ',';\n        }\n    );\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.node(node.query);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.put('.[');\n    ctx.node(node.query);\n    ctx.put(']');\n}\n", "export function compile(node, ctx) {\n    ctx.createScope(\n        () => {\n            ctx.scope.arg1 = true;\n            ctx.put('function($){return ');\n            ctx.node(node.body);\n            ctx.put('}');\n        },\n        (scopeStart, sp) => {\n            return scopeStart + sp + ',';\n        }\n    );\n}\nexport function walk(node, ctx) {\n    ctx.node(node.body);\n}\nexport function stringify(node, ctx) {\n    if (node.legacy) {\n        ctx.put('<');\n        ctx.node(node.body);\n        ctx.put('>');\n    } else {\n        ctx.put('=>');\n        ctx.node(node.body);\n    }\n}\n", "export function suggest(node, ctx) {\n    ctx.range(node.property.range, 'path', node.value || undefined, !node.value);\n\n    if (node.value === null) {\n        ctx.range(node.property.range, 'var');\n    }\n\n    if (node.range &&\n        node.value === null &&\n        node.property.range[0] !== node.range[0]) {\n        ctx.queryRoot(node.range[0]);\n    }\n}\nexport function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('map'));\n    ctx.put('(');\n    ctx.nodeOrCurrent(node.value);\n    ctx.put(',');\n\n    if (node.property.type === 'Identifier') {\n        ctx.put(JSON.stringify(node.property.name));\n    } else {\n        ctx.node(node.property);\n    }\n\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.node(node.property);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.value) && ctx.put('.');\n    ctx.node(node.property);\n}\n", "export function compile(node, ctx) {\n    ctx.put(node.name);\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put(node.name);\n}\n", "export function compile(node, ctx) {\n    ctx.put(typeof node.value === 'string' ? JSON.stringify(node.value) : String(node.value));\n}\nexport function walk() { }\nexport function stringify(node, ctx) {\n    ctx.put(\n        typeof node.value === 'string'\n            ? JSON.stringify(node.value)\n            : String(node.value)\n    );\n}\n", "export function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('map'));\n    ctx.put('(');\n    ctx.nodeOrCurrent(node.value);\n    ctx.createScope(\n        () => {\n            ctx.put(',$=>');\n            ctx.node(node.query);\n        },\n        (scopeStart, sp) => {\n            ctx.put(')');\n            return scopeStart + '(' + sp + ',';\n        }\n    );\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.node(node.query);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.put('.(');\n    ctx.node(node.query);\n    ctx.put(')');\n}\n", "export function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('mapRecursive'));\n    ctx.put('(');\n    ctx.nodeOrCurrent(node.value);\n    ctx.createScope(\n        () => {\n            ctx.put(',$=>');\n            ctx.node(node.query);\n        },\n        (scopeStart, sp) => {\n            ctx.put(')');\n            return scopeStart + '(' + sp + ',';\n        }\n    );\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.node(node.query);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.put('..');\n\n    if (ctx.isSimpleGetPropertyQuery(node.query) || ctx.isSimpleMethodCallQuery(node.query)) {\n        ctx.node(node.query);\n    } else {\n        ctx.put('(');\n        ctx.node(node.query);\n        ctx.put(')');\n    }\n}\n", "export function suggest(node, ctx) {\n    if (node.arguments.length === 0) {\n        ctx.queryRoot(node.range[1] - 1);\n    }\n}\nexport function compile(node, ctx, relatedNode) {\n    //  default mode: method(relatedNode, ...args...)\n    // tolerant mode: (typeof method === 'function' ? method(relatedNode, ...args...) : undefined)\n    if (ctx.tolerant) {\n        ctx.put('(typeof ');\n    }\n\n    if (node.reference.type === 'Identifier') {\n        if (ctx.usedMethods.has(node.reference.name)) {\n            ctx.usedMethods.get(node.reference.name).push(node.reference.range);\n        } else {\n            ctx.usedMethods.set(node.reference.name, node.reference.range);\n        }\n\n        ctx.put('m.');\n    }\n\n    ctx.node(node.reference);\n\n    if (ctx.tolerant) {\n        ctx.put('===\"function\"?');\n\n        if (node.reference.type === 'Identifier') {\n            ctx.put('m.');\n        }\n\n        ctx.node(node.reference);\n    }\n\n    ctx.put('(');\n    ctx.nodeOrCurrent(relatedNode);\n\n    if (node.arguments.length) {\n        ctx.put(',');\n        ctx.list(node.arguments, ',');\n    }\n\n    ctx.put(')');\n\n    if (ctx.tolerant) {\n        ctx.put(':undefined)');\n    }\n}\nexport function walk(node, ctx) {\n    ctx.node(node.reference);\n    ctx.list(node.arguments);\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.reference);\n    ctx.put('(');\n    ctx.list(node.arguments, ',');\n    ctx.put(')');\n}\n", "export function compile(node, ctx) {\n    ctx.node(node.method, node.value);\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n    ctx.node(node.method);\n}\nexport function stringify(node, ctx) {\n    ctx.nodeOrNothing(node.value) && ctx.put('.');\n    ctx.node(node.method);\n}\n", "export function suggest(node, ctx) {\n    if (node.properties.length === 0) {\n        ctx.queryRoot(node.range[0] + 1, node.range[1] - 1);\n    }\n}\nexport function compile(node, ctx) {\n    ctx.put('{');\n    ctx.list(node.properties, ',');\n    ctx.put('}');\n}\nexport function walk(node, ctx) {\n    ctx.list(node.properties);\n}\nexport function stringify(node, ctx) {\n    ctx.put('{');\n    ctx.list(node.properties, ',');\n    ctx.put('}');\n}\n", "import { GetProperty, Identifier } from '../build.js';\n\nconst noBracketKeyType = new Set([\n    'Literal',\n    'Identifier',\n    'Reference',\n    'Current'\n]);\n\nexport function suggest(node, ctx) {\n    if (node.value === null) {\n        switch (node.key.type) {\n            case 'Identifier':\n                ctx.range(node.range, 'path');\n                ctx.range(node.range, 'var');\n                break;\n\n            case 'Current':\n            case 'Reference':\n                ctx.range(node.range, 'var');\n                break;\n        }\n    }\n}\nexport function compile(node, ctx) {\n    let value = node.value;\n\n    switch (node.key.type) {\n        case 'Current':\n            return;\n\n        case 'Literal':\n            ctx.node(node.key);\n            break;\n\n        case 'Identifier':\n            ctx.node(node.key);\n            value = value || GetProperty(null, Identifier(node.key.name));\n            break;\n\n        case 'Reference':\n            ctx.node(node.key.name);\n            value = value || node.key;\n            break;\n\n        default:\n            ctx.put('[');\n            ctx.node(node.key);\n            ctx.put(']');\n    }\n\n    ctx.put(':');\n    ctx.node(value);\n}\nexport function walk(node, ctx) {\n    ctx.node(node.key);\n    ctx.nodeOrNothing(node.value);\n}\nexport function stringify(node, ctx) {\n    if (noBracketKeyType.has(node.key.type)) {\n        ctx.node(node.key);\n\n        if (node.value === null) {\n            return;\n        }\n    } else {\n        ctx.put('[');\n        ctx.node(node.key);\n        ctx.put(']');\n    }\n\n    ctx.put(':');\n    ctx.node(node.value);\n}\n", "export function compile(node, ctx) {\n    ctx.put('(');\n    ctx.node(node.body);\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.node(node.body);\n}\nexport function stringify(node, ctx) {\n    ctx.put('(');\n    ctx.node(node.body);\n    ctx.put(')');\n}\n", "export function suggest(node, ctx) {\n    if (node.getter === null) {\n        const pos = node.range[1] - 1;\n        ctx.range([pos, pos], 'key', node.value, false);\n        ctx.queryRoot(pos);\n    } else if (\n        node.getter.type === 'GetProperty' ||\n        node.getter.type === 'Reference' ||\n        (node.getter.type === 'Literal' && typeof node.getter.value === 'string')\n    ) {\n        ctx.range(node.getter.range, 'key', node.value, false);\n    }\n}\nexport function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('pick'));\n    ctx.put('(');\n    ctx.node(node.value);\n\n    if (node.getter) {\n        ctx.put(',');\n        ctx.node(node.getter);\n    }\n\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.node(node.value);\n\n    if (node.getter !== null) {\n        ctx.node(node.getter);\n    }\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.value);\n    ctx.put('[');\n\n    if (node.getter !== null) {\n        ctx.node(node.getter);\n    }\n\n    ctx.put(']');\n}\n", "export function compile(node, ctx) {\n    ctx.createScope(\n        () => {\n            ctx.put('($=>(');\n            ctx.node(node.right);\n            ctx.put('))');\n        },\n        (scopeStart, sp) => {\n            return scopeStart + sp + ',';\n        }\n    );\n\n    ctx.put('(');\n    ctx.node(node.left);\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.node(node.left);\n    ctx.node(node.right);\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.left);\n    ctx.put('|');\n    ctx.node(node.right);\n}\n", "export function suggest(node, ctx) {\n    ctx.queryRoot(node.range[1]);\n}\nexport function compile(node, ctx) {\n    ctx.put('$');\n}\nexport function walk() {}\nexport function stringify() {}\n", "export function compile(node, ctx) {\n    if (node.operator && node.operator.type) {\n        ctx.createScope(\n            () => {\n                ctx.put('($=>');\n                ctx.node(node.operator);\n                ctx.put(')');\n            },\n            (scopeStart, sp) => {\n                return scopeStart + sp + ';';\n            }\n        );\n        ctx.put('(');\n        ctx.node(node.argument);\n        ctx.put(')');\n        return;\n    }\n\n    switch (node.operator) {\n        default: {\n            ctx.error('Unknown operator \"' + node.operator + '\"', node);\n        }\n    }\n}\nexport function walk(node, ctx) {\n    ctx.node(node.argument);\n\n    if (node.operator && node.operator.type) {\n        ctx.node(node.operator);\n    }\n}\nexport function stringify(node, ctx) {\n    ctx.node(node.argument);\n    ctx.put(' ');\n    ctx.node(node.operator);\n}\n", "export function compile(node, ctx) {\n    switch (node.operator) {\n        case 'no':\n        case 'not':\n            ctx.put('!');\n            ctx.put(ctx.buildinFn('bool'));\n            ctx.put('(');\n            ctx.node(node.argument);\n            ctx.put(')');\n            break;\n\n        case '+':\n        case '-':\n            ctx.put(node.operator);\n            ctx.node(node.argument);\n            break;\n\n        case 'is':\n            ctx.put('!!(');\n            ctx.node(node.argument);\n            ctx.put(')');\n            break;\n\n        default: {\n            ctx.error('Unknown operator \"' + node.operator + '\"', node);\n        }\n    }\n}\nexport function walk(node, ctx) {\n    ctx.node(node.argument);\n\n    if (node.operator && node.operator.type) {\n        ctx.node(node.operator);\n    }\n}\nexport function stringify(node, ctx) {\n    ctx.put(node.operator);\n\n    if (node.operator !== '-' && node.operator !== '+') {\n        ctx.put(' ');\n    }\n\n    ctx.node(node.argument);\n}\n", "export function suggest(node, ctx) {\n    if (node.range) {\n        ctx.range(node.range, 'var');\n    }\n}\nexport function compile(node, ctx) {\n    if (!ctx.scope.includes(node.name.name) && ctx.tolerant) {\n        // FIXME: use ctx.error() here\n        ctx.put('(typeof $');\n        ctx.node(node.name);\n        ctx.put('!==\"undefined\"?$');\n        ctx.node(node.name);\n        ctx.put(':undefined)');\n        return;\n    }\n\n    ctx.put('$');\n    ctx.node(node.name);\n}\nexport function walk(node, ctx) {\n    ctx.node(node.name);\n}\nexport function stringify(node, ctx) {\n    ctx.put('$');\n    ctx.node(node.name);\n}\n", "export function compile(node, ctx) {\n    ctx.put(ctx.buildinFn('slice'));\n    ctx.put('(');\n    ctx.nodeOrCurrent(node.value);\n    node.arguments.slice(0, 3).forEach(item => {\n        ctx.put(',');\n        item ? ctx.node(item) : ctx.put('undefined');\n    });\n    ctx.put(')');\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.value);\n\n    for (const arg of node.arguments.slice(0, 3)) {\n        if (arg) {\n            ctx.node(arg);\n        }\n    }\n}\nexport function stringify(node, ctx) {\n    const [a, b, c] = node.arguments;\n\n    ctx.nodeOrNothing(node.value);\n    ctx.put('[');\n\n    if (a) {\n        ctx.node(a);\n    }\n\n    ctx.put(':');\n\n    if (b) {\n        ctx.node(b);\n    }\n\n    if (c) {\n        ctx.put(':');\n        ctx.node(c);\n    }\n\n    ctx.put(']');\n}\n", "export function suggest(node, ctx) {\n    if (node.query === null) {\n        ctx.queryRoot(node.range[1]);\n    }\n}\nexport function compile(node, ctx) {\n    if (node.array) {\n        ctx.put('...');\n        ctx.put(ctx.buildinFn('ensureArray'));\n        ctx.put('(');\n        ctx.nodeOrCurrent(node.query);\n        ctx.put(')');\n        return;\n    }\n\n    ctx.put('...');\n    ctx.nodeOrCurrent(node.query);\n}\nexport function walk(node, ctx) {\n    ctx.nodeOrNothing(node.query);\n}\nexport function stringify(node, ctx) {\n    ctx.put('...');\n    ctx.nodeOrNothing(node.query);\n}\n", "export function suggest(node, ctx) {\n    for (const [idx, v] of Object.entries(node.values)) {\n        if (v === null) {\n            ctx.queryRoot(node.values[Number(idx) - 1].range[1]);\n        }\n    }\n}\nexport function compile(node, ctx) {\n    for (const [k, v] of Object.entries(node.values)) {\n        const idx = Number(k);\n\n        if (v === null) {\n            continue;\n        }\n\n        if (idx !== 0) {\n            ctx.put('+');\n        }\n\n        if (idx % 2 === 0) {\n            ctx.put('\"' + encodeString(v.value, compileEscape) + '\"');\n        } else {\n            ctx.put('(');\n            ctx.node(v);\n            ctx.put(')');\n        }\n    }\n}\nexport function walk(node, ctx) {\n    for (const v of node.values) {\n        if (v !== null) {\n            ctx.node(v);\n        }\n    }\n}\nexport function stringify(node, ctx) {\n    const lastIdx = node.values.length - 1;\n\n    for (const [k, v] of Object.entries(node.values)) {\n        const idx = Number(k);\n\n        if (idx % 2 === 0) {\n            ctx.put(idx === 0 ? '`' : '}');\n            ctx.put(encodeString(v.value, stringifyEscape));\n            ctx.put(idx === lastIdx ? '`' : '${');\n        } else if (v !== null) {\n            ctx.node(v);\n        }\n    }\n}\n\nconst compileEscape = new Map([\n    ['\\b', '\\\\b'],\n    ['\\n', '\\\\n'],\n    ['\\r', '\\\\r'],\n    ['\\f', '\\\\f'],\n    ['\\t', '\\\\t'],\n    ['\\v', '\\\\v'],\n    ['\\u2028', '\\\\u2028'],\n    ['\\u2029', '\\\\u2029'],\n    ['\\\\', '\\\\\\\\'],\n    ['\"', '\\\\\"']\n]);\nconst stringifyEscape = new Map([\n    ['\\b', '\\\\b'],\n    ['\\f', '\\\\f'],\n    ['\\t', '\\\\t'],\n    ['\\v', '\\\\v'],\n    ['\\\\', '\\\\\\\\'],\n    ['$', '\\\\$']\n]);\nfunction encodeString(s, map) {\n    let result = '';\n\n    for (let i = 0; i < s.length; i++) {\n        result += map.get(s[i]) || s[i];\n    }\n\n    return result;\n}\n", "import * as Arg1 from './Arg1.js';\nimport * as Array from './Array.js';\nimport * as Assertion from './Assertion.js';\nimport * as Binary from './Binary.js';\nimport * as Block from './Block.js';\nimport * as Compare from './Compare.js';\nimport * as CompareFunction from './CompareFunction.js';\nimport * as Conditional from './Conditional.js';\nimport * as Context from './Context.js';\nimport * as Current from './Current.js';\nimport * as Data from './Data.js';\nimport * as Declarator from './Declarator.js';\nimport * as Definition from './Definition.js';\nimport * as Filter from './Filter.js';\nimport * as Function from './Function.js';\nimport * as GetProperty from './GetProperty.js';\nimport * as Identifier from './Identifier.js';\nimport * as Literal from './Literal.js';\nimport * as MapNode from './Map.js';\nimport * as MapRecursive from './MapRecursive.js';\nimport * as Method from './Method.js';\nimport * as MethodCall from './MethodCall.js';\nimport * as ObjectNode from './Object.js';\nimport * as ObjectEntry from './ObjectEntry.js';\nimport * as Parentheses from './Parentheses.js';\nimport * as Pick from './Pick.js';\nimport * as Pipeline from './Pipeline.js';\nimport * as Placeholder from './Placeholder.js';\nimport * as Postfix from './Postfix.js';\nimport * as Prefix from './Prefix.js';\nimport * as Reference from './Reference.js';\nimport * as SliceNotation from './SliceNotation.js';\nimport * as Spread from './Spread.js';\nimport * as Template from './Template.js';\n\nexport const nodes = {\n    Arg1,\n    Array,\n    Assertion,\n    Binary,\n    Block,\n    Compare,\n    Conditional,\n    Context,\n    Current,\n    Data,\n    Declarator,\n    Definition,\n    Filter,\n    Function,\n    GetProperty,\n    Identifier,\n    Literal,\n    Map: MapNode,\n    MapRecursive,\n    Method,\n    MethodCall,\n    Object: ObjectNode,\n    ObjectEntry,\n    Parentheses,\n    Pick,\n    Pipeline,\n    Placeholder,\n    Postfix,\n    Prefix,\n    Reference,\n    SliceNotation,\n    CompareFunction,\n    Spread,\n    Template\n};\n\nconst extract = type => new Map(\n    Object.entries(nodes)\n        .map(([key, value]) => [key, value[type]])\n        .filter(([, value]) => typeof value === 'function')\n);\n\nexport const build = {};\nextract('build').forEach(\n    (value, key) => (build[key] = value)\n);\n\nexport const compile = extract('compile');\nexport const walk = extract('walk');\nexport const stringify = extract('stringify');\nexport const suggest = extract('suggest');\n", "import { walk as nodes } from './nodes/index.js';\n\nexport default function walk(ast, options) {\n    function walk(node) {\n        if (nodes.has(node.type)) {\n            enter(node);\n            nodes.get(node.type)(node, ctx);\n            leave(node);\n        } else {\n            throw new Error('Unknown node type \"' + node.type + '\"');\n        }\n    }\n\n    const ctx = {\n        node: walk,\n        nodeOrNothing(node) {\n            if (node !== null) {\n                walk(node);\n            }\n        },\n        list(list) {\n            list.forEach(walk);\n        }\n    };\n    let enter = () => {};\n    let leave = () => {};\n\n    if (typeof options === 'function') {\n        options = { enter: options };\n    }\n\n    if (options) {\n        if (typeof options.enter === 'function') {\n            enter = options.enter;\n        }\n\n        if (typeof options.leave === 'function') {\n            leave = options.leave;\n        }\n    }\n\n    walk(ast);\n};\n", "import { suggest as nodes } from './nodes/index.js';\nimport walk from './walk.js';\n\nfunction isSuggestProhibitedChar(str, offset) {\n    return (\n        offset >= 0 &&\n        offset < str.length &&\n        /[a-zA-Z_$0-9]/.test(str[offset])\n    );\n}\n\nfunction isWhiteSpace(str, offset) {\n    const code = str.charCodeAt(offset);\n    return code === 9 || code === 10 || code === 13 || code === 32;\n}\n\nfunction onlyWsInRange(str, start, end) {\n    for (; start < end; start++) {\n        if (!isWhiteSpace(str, start)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getSuggestRanges(from, to, input, commentRanges, noSuggestOnEofPos) {\n    const ranges = [];\n\n    for (let i = 0; i < commentRanges.length; i++) {\n        const [commentFrom, commentTo] = commentRanges[i];\n\n        if (commentFrom >= to) {\n            break;\n        }\n\n        if (commentFrom < from) {\n            continue;\n        }\n\n        ranges.push(from, commentFrom);\n        from = commentTo;\n    }\n\n    if (from !== input.length || !noSuggestOnEofPos) {\n        ranges.push(from, to);\n    }\n\n    return ranges;\n}\n\nfunction processSuggestRanges(suggestRanges, source, commentRanges, noSuggestOnEofPos) {\n    const result = [];\n\n    for (let i = 0; i < suggestRanges.length; i++) {\n        let [start, end, type, related] = suggestRanges[i];\n\n        if (onlyWsInRange(source, start, end)) {\n            while (start >= 0 && isWhiteSpace(source, start - 1)) {\n                start--;\n            }\n\n            while (end < source.length && isWhiteSpace(source, end)) {\n                end++;\n            }\n\n            // when starts on keyword/number/var end\n            if (isSuggestProhibitedChar(source, start - 1)) {\n                if (start === end) {\n                    continue;\n                }\n                start++;\n            }\n\n            // when ends on keyword/number/var start\n            if (isSuggestProhibitedChar(source, end)) {\n                if (start === end) {\n                    continue;\n                }\n                end--;\n            }\n        }\n\n        const ranges = getSuggestRanges(start, end, source, commentRanges, noSuggestOnEofPos);\n        for (let j = 0; j < ranges.length; j += 2) {\n            result.push([ranges[j], ranges[j + 1], type, related]);\n        }\n    }\n\n    return result;\n}\n\nfunction collectNodeSuggestions(ast) {\n    let currentNode = null;\n    const literalList = [];\n    const suggestions = Object.assign(new Map(), { literalList });\n    const add = (node, range) => {\n        if (!suggestions.has(node)) {\n            suggestions.set(node, [range]);\n        } else {\n            suggestions.get(node).push(range);\n        }\n    };\n    const ctx = {\n        range(range, type, node = currentNode, related = true) {\n            add(node, [...range, type, related]);\n        },\n        literalList(values) {\n            const name = 'l' + literalList.length;\n\n            literalList.push([name, values]);\n\n            return name;\n        },\n        queryRoot(start, end = start) {\n            add(currentNode, [start, end, 'var', true]);\n            add(currentNode, [start, end, 'path', true]);\n        }\n    };\n\n    walk(ast, (node) => {\n        if (nodes.has(node.type)) {\n            const prevNode = currentNode;\n            currentNode = node;\n\n            nodes.get(node.type)(node, ctx);\n\n            currentNode = prevNode;\n        }\n    });\n\n    return suggestions;\n}\n\nexport default function suggest(source, { ast, commentRanges }) {\n    const suggestions = collectNodeSuggestions(ast);\n    const noSuggestOnEofPos = // edge case when source ends with a comment with no newline\n        commentRanges.length &&\n        commentRanges[commentRanges.length - 1][1] === source.length &&\n        !/[\\r\\n]$/.test(source);\n\n    for (const [node, rawRanges] of suggestions) {\n        suggestions.set(node, processSuggestRanges(rawRanges, source, commentRanges, noSuggestOnEofPos));\n    }\n\n    return suggestions;\n};\n", "import { stringify as nodes } from './nodes/index.js';\n\nfunction isSimpleGetPropertyQuery(node) {\n    if (node.type !== 'GetProperty') {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isSimpleMethodCallQuery(node) {\n    if (node.type !== 'MethodCall') {\n        return false;\n    }\n\n    return true;\n}\n\nexport default function stringify(ast) {\n    function walk(node) {\n        if (nodes.has(node.type)) {\n            nodes.get(node.type)(node, ctx);\n        } else {\n            throw new Error('Unknown node type \"' + node.type + '\"');\n        }\n    }\n\n    const buffer = [];\n    const ctx = {\n        isSimpleGetPropertyQuery,\n        isSimpleMethodCallQuery,\n        put(chunk) {\n            buffer.push(chunk);\n        },\n        node: walk,\n        nodeOrNothing(node) {\n            if (node !== null) {\n                walk(node);\n                return true;\n            }\n        },\n        list(list, sep) {\n            if (!sep) {\n                list.forEach(walk);\n                return;\n            }\n\n            list.forEach((element, idx) => {\n                if (idx > 0) {\n                    ctx.put(sep);\n                }\n                walk(element);\n            });\n        }\n    };\n\n    walk(ast);\n\n    return buffer.join('');\n};\n", "export default function createCustomError(name, message, extensions) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.assign(Object.create(SyntaxError.prototype), extensions);\n    const errorStack = new Error();\n\n    error.name = name;\n    error.message = message;\n\n    Object.defineProperty(error, 'stack', {\n        get: function() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, name + ': ' + message + '\\n');\n        }\n    });\n\n    return error;\n};\n", "import { hasOwn } from '../utils/misc.js';\nimport createError from './error.js';\nimport { compile as nodes } from './nodes/index.js';\n\nexport default function compile(ast, tolerant = false, suggestions = null) {\n    function newStatPoint(values) {\n        const spName = 's' + spNames.length;\n\n        spNames.push(values ? [spName, values] : [spName]);\n\n        return spName;\n    }\n\n    function getNodeSpName(node) {\n        let spName = nodeSpName.get(node);\n\n        if (!spName) {\n            nodeSpName.set(node, spName = newStatPoint());\n        }\n\n        return spName;\n    }\n\n    function addSuggestPoint(start, end, type, spName, related) {\n        let range = [start, end, JSON.stringify(type)];\n\n        if (type === 'var') {\n            if (!ctx.scope.length) {\n                return;\n            }\n\n            range.push(JSON.stringify(ctx.scope));\n        } else {\n            if (!spName) {\n                spName = newStatPoint();\n            }\n\n            range.push(spName);\n\n            if (related) {\n                range.push(typeof related === 'string' ? related : getNodeSpName(related));\n            }\n        }\n\n        normalizedSuggestRanges.push(range);\n\n        return spName;\n    }\n\n    function createScope(fn, defCurrent) {\n        const prevScope = ctx.scope;\n        const scopeStart = buffer.length;\n\n        ctx.scope = ctx.scope.slice();\n        ctx.scope.own = [];\n        ctx.scope.firstCurrent = null;\n        ctx.scope.captureCurrent = [];\n        ctx.scope.arg1 = prevScope.arg1 || false;\n\n        fn();\n\n        if (ctx.scope.captureCurrent.length) {\n            const spName = ctx.scope.captureCurrent.reduce(\n                (spName, range) => addSuggestPoint(...range, spName),\n                undefined\n            );\n            const stat = 'stat(' + spName + ',$)';\n\n            if (ctx.scope.firstCurrent) {\n                buffer[ctx.scope.firstCurrent] = stat;\n            } else {\n                buffer[scopeStart] = defCurrent(buffer[scopeStart], stat);\n            }\n        }\n\n        ctx.scope = prevScope;\n    }\n\n    function walk(node, relatedNode) {\n        let spName = false;\n\n        if (suggestions !== null) {\n            if (suggestions.has(node)) {\n                for (const [start, end, type, related] of suggestions.get(node)) {\n                    if (type === 'var') {\n                        addSuggestPoint(start, end, type);\n                    } else if (related === true) {\n                        ctx.scope.captureCurrent.push([start, end, type]);\n                    } else {\n                        if (!spName) {\n                            spName = getNodeSpName(node);\n                            buffer.push('stat(' + spName + ',');\n                        }\n\n                        if (type) {\n                            addSuggestPoint(start, end, type, spName, related);\n                        }\n                    }\n                }\n            }\n\n            if (node.type === 'Current' &&\n                ctx.scope.firstCurrent === null &&\n                ctx.scope.captureCurrent.disabled !== true) {\n                ctx.scope.firstCurrent = buffer.length;\n            }\n        }\n\n        if (nodes.has(node.type)) {\n            nodes.get(node.type)(node, ctx, relatedNode);\n        } else {\n            throw new Error('Unknown node type \"' + node.type + '\"');\n        }\n\n        if (spName) {\n            buffer.push(')');\n        }\n    }\n\n    const spNames = [];\n    const nodeSpName = new WeakMap();\n    const allocatedVars = [];\n    const normalizedSuggestRanges = [];\n    const buffer = [\n        '((data,context)=>{',\n        'const $=data;',\n        { toString() {\n            return allocatedVars.length > 0 ? 'let ' + allocatedVars + ';\\n' : '';\n        } },\n        { toString() {\n            return spNames.length > 0\n                ? [\n                    'const stat=(s,v)=>(s.add(v),v);\\n',\n                    'const ' + spNames.map(([name, values]) =>\n                        name + '=new Set(' + (values ? JSON.stringify(values) : '') + ')'\n                    ) + ';\\n'\n                ].join('')\n                : '';\n        } },\n        { toString() {\n            const lists = suggestions &&\n                Array.isArray(suggestions.literalList) &&\n                suggestions.literalList\n                    .map(([name, values]) => name + '=' + JSON.stringify(values));\n\n            return lists && lists.length ? 'const ' + lists + ';\\n' : '';\n        } },\n        suggestions === null ? 'return ' : 'return{\\nvalue: '\n    ];\n\n    const initCtx = {};\n    const usedBuildinMethods = new Set();\n    const ctx = {\n        tolerant,\n        usedAssertions: new Map(),\n        usedMethods: new Map(),\n        buildinFn(name) {\n            usedBuildinMethods.add(name);\n            return 'f.' + name;\n        },\n        scope: [],\n        createScope,\n        error: (message, node) => {\n            const error = new SyntaxError(message);\n\n            if (node && node.range) {\n                error.details = {\n                    loc: {\n                        range: node.range\n                    }\n                };\n            }\n\n            if (!tolerant) {\n                throw error;\n            }\n        },\n        allocateVar() {\n            const name = 'tmp' + allocatedVars.length;\n\n            allocatedVars.push(name);\n\n            return name;\n        },\n        put: chunk => buffer.push(chunk),\n        node: walk,\n        nodeOrCurrent(node, relatedNode) {\n            walk(node || { type: 'Current' }, relatedNode);\n        },\n        list(list, sep, relatedNode) {\n            list.forEach((node, idx) => {\n                if (idx > 0) {\n                    buffer.push(sep);\n                }\n                walk(node, relatedNode);\n            });\n        }\n    };\n\n    createScope(\n        () => walk(ast),\n        (scopeStart, sp) => {\n            buffer.push(')');\n            return '(' + sp + ',' + scopeStart;\n        }\n    );\n\n    if (!tolerant) {\n        const { usedMethods, usedAssertions } = ctx;\n\n        if (usedAssertions.size) {\n            buffer.unshift(' this.assertAssertions(a)||');\n            initCtx.assertAssertions = function(providedAssertions) {\n                for (const [assertion, range] of usedAssertions.entries()) {\n                    if (!hasOwn(providedAssertions, assertion)) {\n                        return () => {\n                            throw Object.assign(\n                                new Error(`Assertion \"${assertion}\" is not defined`),\n                                { details: { loc: { range } } }\n                            );\n                        };\n                    }\n                }\n            };\n        }\n\n        if (usedMethods.size) {\n            buffer.unshift(' this.assertMethods(m)||');\n            initCtx.assertMethods = function(providedMethods) {\n                for (const [method, range] of usedMethods.entries()) {\n                    if (!hasOwn(providedMethods, method)) {\n                        return () => {\n                            throw Object.assign(\n                                new Error(\n                                    `Method \"${method}\" is not defined. If that's a custom method ` +\n                                    'make sure you added it with \"methods\" section in options'\n                                ),\n                                { details: { loc: { range } } }\n                            );\n                        };\n                    }\n                }\n            };\n        }\n    }\n\n    if (suggestions !== null) {\n        buffer.push(\n            ',\\nstats: [' + normalizedSuggestRanges.map(s => '[' + s + ']') + ']' +\n            ',\\nassertions: a' +\n        '\\n}');\n    }\n\n    try {\n        const fn = new Function('f,m,a', 'return' + buffer.join('') + '})');\n\n        return Object.assign(fn.bind(initCtx), {\n            toString() {\n                return fn.toString().replace(/^(\\S+\\s+)anonymous([^)\\s]+)\\s*\\)/, '$1query$2)');\n            }\n        });\n    } catch (e) {\n        throw createError('SyntaxError', 'Jora query compilation error', {\n            compiledSource: buffer.join(''),\n            details: e\n        });\n    }\n};\n", "const TYPE_EOF   = 0b0000;\nconst TYPE_WS    = 0b0001;\nconst TYPE_DELIM = 0b0010;\nconst TYPE_NUM   = 0b0100;\nconst TYPE_WORD  = 0b1000;\nconst TYPE_WS_OR_DELIM = TYPE_WS | TYPE_DELIM;\nconst TYPE_NUM_OR_WORD = TYPE_NUM | TYPE_WORD;\nconst DEBUG = false;\nconst DEBUG_TYPE_NAME = {\n    [TYPE_EOF]: 'eof',\n    [TYPE_WS]: 'ws',\n    [TYPE_DELIM]: 'delim',\n    [TYPE_NUM]: 'number',\n    [TYPE_WORD]: 'word'\n};\n\nconst isSortableValue = value => typeof value === 'number' || typeof value === 'string';\nconst safeCharCodeAt = (source, offset) => offset < source.length ? source.charCodeAt(offset) : 0;\nconst isSign = (code) => code === 0x002B || code === 0x002D; // + or -\nconst isDigit = (code) => code >= 0x0030 && code <= 0x0039;\nconst isWS = (code) => (\n    code === 0x0009 ||  // \\t\n    code === 0x000A ||  // \\n\n    code === 0x000C ||  // \\f\n    code === 0x000D ||  // \\r\n    code === 0x0020     // whitespace\n);\nconst isDelim = (code) => (\n    (code > 0x0020 && code < 0x0100) &&  // ascii char\n    (code < 0x0041 || code > 0x005A) &&  // not A..Z\n    (code < 0x0061 || code > 0x007A) &&  // not a..z\n    !isDigit(code) &&                    // not 0..9\n    !isSign(code)                        // not + or -\n) || code === 0x2116;  /* \u2116 */\nconst isWord = (code) => (\n    code &&\n    !isWS(code) &&\n    !isDelim(code) &&\n    !isDigit(code)\n);\n\n//  Check if three code points would start a number\nconst isNumberStart = (first, second, third) => {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (isSign(first)) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    // if (first === 0x002E) {\n    //     // If the second code point is a digit, return true. Otherwise, return false.\n    //     return isDigit(second) ? 2 : 0;\n    // }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n};\n\nconst findEndOfType = (source, offset, isType) => {\n    while (isType(safeCharCodeAt(source, ++offset))) {\n        // do nothing\n    }\n\n    return offset;\n};\n\nconst consumeNumber = (source, offset, preventFloat) => {\n    let code = safeCharCodeAt(source, offset);\n\n    // If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (isSign(code)) {\n        code = safeCharCodeAt(source, offset += 1);\n    }\n\n    // While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findEndOfType(source, offset, isDigit);\n        code = safeCharCodeAt(source, offset);\n    }\n\n    // If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(safeCharCodeAt(source, offset + 1))) {\n        if (preventFloat) {\n            return offset;\n        }\n\n        // Consume them\n        // While the next input code point is a digit, consume it and append it to repr.\n        const expectedEnd = findEndOfType(source, offset + 1, isDigit);\n        code = safeCharCodeAt(source, expectedEnd);\n\n        // If next char is U+002E FULL STOP (.), then don't consume\n        if (code === 0x002E) {\n            return offset;\n        }\n\n        offset = expectedEnd;\n    }\n\n    // If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (code === 0x0045 /* e */ || code === 0x0065 /* E */) {\n        let sign = 1;\n        code = safeCharCodeAt(source, offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (isSign(code)) {\n            sign = 2;\n            code = safeCharCodeAt(source, offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // While the next input code point is a digit, consume it and append it to repr.\n            offset = findEndOfType(source, offset + sign, isDigit);\n        }\n    }\n\n    return offset;\n};\n\nconst getToken = (source, offset, preventFloat, preventSign) => {\n    if (offset >= source.length) {\n        return TYPE_EOF;\n    }\n\n    const code = safeCharCodeAt(source, offset);\n\n    // Whitespace\n    if (isWS(code)) {\n        return TYPE_WS | (findEndOfType(source, offset, isWS) - offset << 4);\n    }\n\n    // Delim sequence\n    // console.log(source[offset], isDelim(a), a.toString(16), preventSign)\n    if (isDelim(code) || (preventSign && isSign(code))) {\n        return TYPE_DELIM | (findEndOfType(source, offset, isDelim) - offset << 4);\n    }\n\n    // Number\n    if (isNumberStart(code, safeCharCodeAt(source, offset + 1), safeCharCodeAt(source, offset + 2))) {\n        return TYPE_NUM | (consumeNumber(source, offset, preventFloat) - offset << 4);\n    }\n\n    // Word\n    return TYPE_WORD | (findEndOfType(source, offset, isWord) - offset << 4);\n};\n\nconst compare = (a, b, analytical) => {\n    let offsetA = 0;\n    let offsetB = 0;\n    let preventFloat = false;\n    let preventSign = false;\n    let postCmpResult = 0;\n    let postCmpResultType = 0;\n    let firstPart = true;\n\n    while (true) {\n        const partA = getToken(a, offsetA, preventFloat, preventSign);\n        const partB = getToken(b, offsetB, preventFloat, preventSign);\n        const typeA = partA & 15;\n        const lenA = partA >> 4;\n        const typeB = partB & 15;\n        const lenB = partB >> 4;\n\n        /* c8 ignore next 6 */\n        if (DEBUG) {\n            console.log({\n                typeA: DEBUG_TYPE_NAME[typeA], lenA, substrA: a.substr(offsetA, lenA),\n                typeB: DEBUG_TYPE_NAME[typeB], lenB, substrB: b.substr(offsetB, lenB)\n            });\n        }\n\n        if (typeA !== typeB) {\n            if (firstPart && (typeA & TYPE_WS_OR_DELIM) && (typeB & TYPE_NUM_OR_WORD)) {\n                postCmpResult = 1;\n                postCmpResultType = typeA;\n                offsetA += lenA;\n                continue;\n            }\n\n            if (firstPart && (typeB & TYPE_WS_OR_DELIM) && (typeA & TYPE_NUM_OR_WORD)) {\n                postCmpResult = -1;\n                postCmpResultType = typeB;\n                offsetB += lenB;\n                continue;\n            }\n\n            return typeA - typeB;\n        }\n\n        // both parts are the same type, no matter which type to test\n        if (typeA === TYPE_EOF) {\n            return postCmpResult;\n        }\n\n        // reset flags\n        firstPart = false;\n        preventFloat = false;\n        preventSign = false;\n\n        // find difference in substr\n        const minLength = lenA < lenB ? lenA : lenB;\n        let substrDiff = lenA - lenB;\n        let cA = '';\n        let cB = '';\n        for (let i = 0; i < minLength; i++) {\n            cA = a[offsetA + i];\n            cB = b[offsetB + i];\n\n            if (cA !== cB) {\n                substrDiff = cA < cB ? -1 : 1;\n                break;\n            }\n        }\n\n        // both parts are the same type, no matter which type to test\n        if (typeA & TYPE_WS_OR_DELIM) {\n            preventFloat = a[offsetA + lenA - 1] === '.';\n\n            if (substrDiff !== 0) {\n                if (typeA > postCmpResultType) {\n                    postCmpResultType = typeA;\n                    postCmpResult = substrDiff;\n                }\n            }\n        } else if (typeA & TYPE_NUM) {\n            preventSign = true;\n\n            if (substrDiff !== 0) {\n                const numDiff = a.substr(offsetA, lenA) - b.substr(offsetB, lenB);\n\n                if (numDiff !== 0) {\n                    return analytical ? -numDiff : numDiff;\n                }\n\n                if (typeA > postCmpResultType) {\n                    const afc = safeCharCodeAt(a, offsetA);\n                    const bfc = safeCharCodeAt(b, offsetB);\n                    const order = afc === 0x002D ? -1 : 1;\n\n                    // a/b  -  o  +\n                    //   -  0 -1 -1\n                    //   o  1  0 -1\n                    //   +  1  1  0\n\n                    postCmpResultType = typeA;\n                    postCmpResult = afc !== bfc && (afc === 0x002D /* - */ || bfc === 0x002B /* + */)\n                        ? -1\n                        : afc !== bfc && (afc === 0x002B /* + */ || bfc === 0x002D /* - */)\n                            ? 1\n                            : (lenA - lenB || substrDiff) < 0 // lenA !== lenB ? lenA < lenB : substrDiff < 0\n                                ? -order\n                                : order;\n\n                    if (analytical) {\n                        postCmpResult = -postCmpResult;\n                    }\n                }\n            }\n        } else { // typeA === TYPE_WORD\n            if (substrDiff !== 0) {\n                if (cA !== cB) {\n                    // case insensitive checking\n                    const sA = a.substr(offsetA, lenA);\n                    const sB = b.substr(offsetB, lenB);\n                    const siA = sA.toLowerCase();\n                    const siB = sB.toLowerCase();\n\n                    if (siA !== siB) {\n                        return siA < siB ? -1 : 1;\n                    }\n\n                    return sA < sB ? -1 : 1;\n                }\n\n                return substrDiff;\n            }\n        }\n\n        offsetA += lenA;\n        offsetB += lenB;\n    }\n};\n\nconst createCompareFn = analytical => (a, b) => {\n    /* c8 ignore next */\n    DEBUG && console.log('Compare', a, b);\n\n    if (isSortableValue(a) && isSortableValue(b)) {\n        const ret = Math.sign(compare(String(a), String(b), analytical));\n\n        /* c8 ignore next */\n        DEBUG && console.log('Result:', ret);\n\n        return ret;\n    }\n\n    /* c8 ignore next */\n    DEBUG && console.log('Result: (non-comparable)');\n\n    return 0;\n};\n\nexport const naturalCompare = createCompareFn(false);\nexport const naturalAnalyticalCompare = createCompareFn(true);\n", "import { naturalCompare, naturalAnalyticalCompare } from '@discoveryjs/natural-compare';\n\nconst TYPE_BOOLEAN = 1;\nconst TYPE_NAN = 2;\nconst TYPE_NUMBER = 3;\nconst TYPE_STRING = 4;\nconst TYPE_NULL = 5;\nconst TYPE_OBJECT = 6;\nconst TYPE_OTHER = 7;\nconst TYPE_UNDEFINED = 8;\n\nfunction cmpType(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return TYPE_BOOLEAN;\n        case 'number':\n            return value !== value ? /* NaN */ TYPE_NAN : TYPE_NUMBER;\n        case 'string':\n            return TYPE_STRING;\n        case 'object':\n            return value === null ? TYPE_NULL : TYPE_OBJECT;\n        case 'undefined':\n            return TYPE_UNDEFINED;\n        default:\n            return TYPE_OTHER;\n    }\n}\n\nexport function cmp(a, b) {\n    const typeA = cmpType(a);\n    const typeB = cmpType(b);\n\n    return typeA !== typeB\n        ? (typeA < typeB ? -1 : 1)\n        : (a < b ? -1 : a > b ? 1 : 0);\n}\n\nexport function cmpAnalytical(a, b) {\n    const typeA = cmpType(a);\n    const typeB = cmpType(b);\n\n    if (typeA !== typeB) {\n        return typeA < typeB ? -1 : 1;\n    }\n\n    if (typeA === TYPE_NUMBER) {\n        return b - a; // reverse order for numbers\n    }\n\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport function cmpNatural(a, b) {\n    const typeA = cmpType(a);\n    const typeB = cmpType(b);\n\n    if ((typeA === TYPE_NUMBER || typeA === TYPE_STRING) &&\n        (typeB === TYPE_NUMBER || typeB === TYPE_STRING)) {\n        return naturalCompare(a, b);\n    }\n\n    return typeA !== typeB\n        ? (typeA < typeB ? -1 : 1)\n        : (a < b ? -1 : a > b ? 1 : 0);\n}\n\nexport function cmpNaturalAnalytical(a, b) {\n    const typeA = cmpType(a);\n    const typeB = cmpType(b);\n\n    if ((typeA === TYPE_NUMBER || typeA === TYPE_STRING) &&\n        (typeB === TYPE_NUMBER || typeB === TYPE_STRING)) {\n        return naturalAnalyticalCompare(a, b, true);\n    }\n\n    return typeA !== typeB\n        ? (typeA < typeB ? -1 : 1)\n        : (a < b ? -1 : a > b ? 1 : 0);\n}\n\nexport function getterToCmp(getter, cmp) {\n    return getter.length === 1\n        ? (a, b) => cmp(getter(a), getter(b))\n        : getter;\n}\n", "import { cmp, cmpAnalytical, cmpNatural, cmpNaturalAnalytical } from '../utils/compare.js';\nimport { hasOwn, addToSet, getPropertyValue, isPlainObject, isRegExp, isArrayLike, isTruthy } from '../utils/misc.js';\n\nexport default Object.freeze({\n    ensureArray,\n    bool: isTruthy,\n    and: (a, b) => isTruthy(a) ? b : a,\n    or: (a, b) => isTruthy(a) ? a : b,\n    add,\n    sub,\n    mul,\n    div,\n    mod,\n    eq,\n    ne,\n    lt,\n    lte,\n    gt,\n    gte,\n    in: in_,\n    notIn: (a, b) => !in_(a, b),\n    has: (a, b) => in_(b, a),\n    hasNo: (a, b) => !in_(b, a),\n    cmp,\n    cmpAnalytical,\n    cmpNatural,\n    cmpNaturalAnalytical,\n    match,\n    pick,\n    indexOf,\n    lastIndexOf,\n    map,\n    mapRecursive,\n    some,\n    filter,\n    slice\n});\n\nfunction ensureArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nfunction add(a, b) {\n    if (Array.isArray(a) || Array.isArray(b)) {\n        return [...new Set([].concat(a, b))];\n    }\n\n    return a + b;\n}\n\nfunction sub(a, b) {\n    if (Array.isArray(a)) {\n        const result = new Set(a);\n\n        // filter b items from a\n        if (Array.isArray(b)) {\n            b.forEach(item => result.delete(item));\n        } else {\n            result.delete(b);\n        }\n\n        return [...result];\n    }\n\n    return a - b;\n}\n\nfunction mul(a, b) {\n    return a * b;\n}\n\nfunction div(a, b) {\n    return a / b;\n}\n\nfunction mod(a, b) {\n    return a % b;\n}\n\nfunction eq(a, b) {\n    return Object.is(a, b);\n}\n\nfunction ne(a, b) {\n    return !Object.is(a, b);\n}\n\nfunction lt(a, b) {\n    return a < b;\n}\n\nfunction lte(a, b) {\n    return a <= b;\n}\n\nfunction gt(a, b) {\n    return a > b;\n}\n\nfunction gte(a, b) {\n    return a >= b;\n}\n\nfunction in_(a, b) {\n    if (isPlainObject(b)) {\n        return hasOwn(b, a);\n    }\n\n    return b\n        ? internalIndexOf(b, a) !== -1\n        : false;\n}\n\nfunction match(value, pattern) {\n    if (typeof pattern === 'function') {\n        return some(value, pattern);\n    }\n\n    if (isRegExp(pattern)) {\n        return some(value, pattern.test.bind(pattern));\n    }\n\n    if (pattern === null || pattern === undefined) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction pick(current, ref = () => true) {\n    if (!current) {\n        return undefined;\n    }\n\n    if (typeof ref === 'function') {\n        if (Array.isArray(current) || typeof current === 'string') {\n            for (let i = 0; i < current.length; i++) {\n                if (ref(current[i], i)) {\n                    return current[i];\n                }\n            }\n        }\n\n        for (const key in current) {\n            if (hasOwn(current, key)) {\n                if (ref(current[key], key)) {\n                    return current[key];\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    if (Array.isArray(current) || typeof current === 'string') {\n        return isFinite(ref)\n            ? current[ref < 0 ? current.length + Number(ref) : Number(ref) || 0]\n            : undefined;\n    }\n\n    return hasOwn(current, ref) ? current[ref] : undefined;\n}\n\nfunction indexOf(dict, value, fromIndex) {\n    return dict\n        ? internalIndexOf(dict, value, fromIndex)\n        : -1;\n}\n\nfunction internalIndexOf(dict, value, fromIndex = 0) {\n    if (Number.isNaN(value)) {\n        if (isArrayLike(dict)) {\n            for (let i = parseInt(fromIndex, 10) || 0; i < dict.length; i++) {\n                if (Number.isNaN(dict[i])) {\n                    return i;\n                }\n            }\n        }\n    }\n\n    if (typeof dict.indexOf === 'function') {\n        return dict.indexOf(value, fromIndex);\n    }\n\n    return -1;\n}\n\nfunction lastIndexOf(dict, value, fromIndex) {\n    return dict\n        ? internalLastIndexOf(dict, value, fromIndex)\n        : -1;\n}\n\nfunction internalLastIndexOf(dict, value, fromIndex) {\n    if (Number.isNaN(value)) {\n        if (isArrayLike(dict)) {\n            for (let i = parseInt(fromIndex, 10) || dict.length - 1; i >= 0; i--) {\n                if (Number.isNaN(dict[i])) {\n                    return i;\n                }\n            }\n        }\n    }\n\n    if (typeof dict.lastIndexOf === 'function') {\n        return dict.lastIndexOf(value, parseInt(fromIndex, 10) || dict.length - 1);\n    }\n\n    return -1;\n}\n\nfunction map(value, getter) {\n    const fn = typeof getter === 'function'\n        ? getter\n        : current => getPropertyValue(current, getter);\n\n    if (Array.isArray(value)) {\n        return [\n            ...value.reduce(\n                (set, item) => addToSet(set, fn(item)),\n                new Set()\n            )\n        ];\n    }\n\n    return value !== undefined ? fn(value) : value;\n}\n\nfunction mapRecursive(value, getter) {\n    const result = new Set();\n\n    addToSet(result, map(value, getter));\n\n    result.forEach(current =>\n        addToSet(result, map(current, getter))\n    );\n\n    return [...result];\n}\n\nfunction some(value, fn) {\n    return Array.isArray(value)\n        ? value.some(current => isTruthy(fn(current)))\n        : isTruthy(fn(value));\n}\n\nfunction filter(value, fn) {\n    if (Array.isArray(value)) {\n        return value.filter(current => isTruthy(fn(current)));\n    }\n\n    return isTruthy(fn(value)) ? value : undefined;\n}\n\nfunction slice(value, from = 0, to = value && value.length, step = 1) {\n    if (!isArrayLike(value)) {\n        return [];\n    }\n\n    from = parseInt(from, 10) || 0;\n    to = parseInt(to, 10) || value.length;\n    step = parseInt(step, 10) || 1;\n\n    if (step !== 1) {\n        const result = [];\n\n        from = from < 0\n            ? Math.max(0, value.length + from)\n            : Math.min(value.length, from);\n        to = to < 0\n            ? Math.max(0, value.length + to)\n            : Math.min(value.length, to);\n\n        for (let i = step > 0 ? from : to - 1; i >= from && i < to; i += step) {\n            result.push(value[i]);\n        }\n\n        return result;\n    }\n\n    if (typeof value === 'string') {\n        return value.slice(from, to);\n    }\n\n    return Array.prototype.slice.call(value, from, to);\n}\n", "const defaultMinCompare = (a, b) => a - b;\nconst defaultMaxCompare = (a, b) => b - a;\n\nexport class Heap {\n    constructor(maxSize, compare, accept) {\n        this.maxSize = maxSize || Infinity;\n        this.compare = compare || defaultMaxCompare;\n        this.accept = accept || null;\n\n        this.values = [];\n    }\n\n    add(value) {\n        if (this.accept !== null && !this.accept(value)) {\n            return;\n        }\n\n        if (this.values.length < this.maxSize) {\n            this.values.push(value);\n            this.heapifyUp(this.values.length - 1);\n        } else if (this.compare(this.values[0], value) > 0) {\n            this.values[0] = value;\n            this.heapifyDown();\n        }\n    }\n\n    addArray(array) {\n        for (let i = 0; i < array.length; i++) {\n            this.add(array[i]);\n        }\n    }\n\n    extract() {\n        const topValue = this.values[0];\n        const lastValue = this.values.pop();\n\n        if (this.values.length > 0) {\n            this.values[0] = lastValue;\n            this.heapifyDown();\n        }\n\n        return topValue;\n    }\n\n    heapifyUp(idx) {\n        const values = this.values;\n        let idxValue = values[idx];\n\n        while (idx > 0) {\n            const parentIdx = (idx - 1) >> 1;\n            const parentValue = values[parentIdx];\n\n            if (this.compare(parentValue, idxValue) > 0) {\n                break;\n            }\n\n            // swap\n            values[parentIdx] = idxValue;\n            values[idx] = parentValue;\n\n            // move up\n            idx = parentIdx;\n        }\n    }\n\n    heapifyDown() {\n        const values = this.values;\n        const size = values.length;\n        const halfSize = size >> 1;\n        let idx = 0;\n        let idxValue = values[idx];\n        let largestIdx = idx;\n        let largestValue = idxValue;\n\n        // if node doesn't exist, simply return\n        while (idx < halfSize) {\n            // select the maximum from left node and current node\n            const left = 2 * idx + 1;\n            const leftValue = values[left];\n            const right = left + 1;\n\n            if (this.compare(leftValue, idxValue) > 0) {\n                largestIdx = left;\n                largestValue = leftValue;\n            }\n\n            // if the right child exists, compare the maximum with right node\n            if (right < size) {\n                const rightValue = values[right];\n\n                if (this.compare(rightValue, largestValue) > 0) {\n                    largestIdx = right;\n                    largestValue = rightValue;\n                }\n            }\n\n            // if node idx does not violate the max-heap property, break the loop\n            if (largestIdx === idx) {\n                break;\n            }\n\n            // swap\n            values[idx] = largestValue;\n            values[largestIdx] = idxValue;\n\n            // go down\n            idx = largestIdx;\n            largestValue = idxValue;\n        }\n    }\n\n    [Symbol.iterator]() {\n        return this.values.slice().sort(this.compare)[Symbol.iterator]();\n    }\n}\n\nexport class MaxHeap extends Heap {};\nexport class MinHeap extends Heap {\n    constructor(maxSize, compare, accept) {\n        super(\n            maxSize,\n            compare ? (a, b) => -compare(a, b) : defaultMinCompare,\n            accept\n        );\n    }\n};\n", "import { isArrayLike } from './misc.js';\n\nconst self = value => value;\n\nexport function toNumber(value) {\n    return value !== null && typeof value === 'object'\n        ? NaN\n        : Number(value);\n}\n\nexport function processNumericArray(current, getter, apply) {\n    if (isArrayLike(current)) {\n        if (typeof getter !== 'function') {\n            getter = self;\n        }\n\n        for (const value of current) {\n            const mappedValue = getter(value);\n\n            if (mappedValue !== undefined) {\n                apply(toNumber(mappedValue));\n            }\n        }\n    }\n}\n", "import { MaxHeap, MinHeap } from './heap.js';\nimport { processNumericArray } from './process-numeric-array.js';\n\nexport function numbersPercentile(array, k, compare) {\n    if (array.length === 0 || !isFinite(k) || k < 0 || k > 100) {\n        return undefined;\n    }\n\n    const rank = k * (array.length - 1) / 100; // Apply a devision by 100 last to reduce a numerical error\n    const lowerRank = Math.floor(rank);\n    const upperRank = Math.ceil(rank);\n    const heap = k < 50\n        ? new MinHeap(upperRank + 1, compare)\n        : new MaxHeap(array.length - lowerRank, compare); // (array.length - 1) - (lowerRank - 1)\n\n    // heap.values = array.slice(0, heap.maxSize);\n    // for (let i = 1; i < heap.maxSize; i++) {\n    //     heap.heapifyUp(i);\n    // }\n\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n\n        if (Number.isNaN(element)) {\n            return NaN;\n        }\n\n        heap.add(element);\n    }\n\n    if (lowerRank !== upperRank) {\n        const a = heap.extract();\n        const b = heap.values[0];\n\n        // Given that both MinHeap and MaxHeap are utilized, the order of values could be either\n        // ascending or descending. The following expression consistently uses the smaller value\n        // as the base for the result. This approach helps to minimize numerical error.\n        return a <= b\n            ? a + (b - a) * (rank - lowerRank)\n            : b + (a - b) * (rank - lowerRank);\n    }\n\n    return heap.values[0];\n}\n\nexport function numbersMedian(array, compare) {\n    return percentile(array, 50, compare);\n}\n\nexport function percentile(array, k, getter, formula, compare) {\n    if (array.length === 0 || !isFinite(k) || k < 0 || k > 100) {\n        return undefined;\n    }\n\n    let arrayLength = 0;\n    let rank = k * (array.length - 1) / 100; // Apply a devision by 100 last to reduce a numerical error\n    let lowerRank = Math.floor(rank);\n    let upperRank = Math.ceil(rank);\n    let hasNaNs = false;\n    const heap = k < 50\n        ? new MinHeap(upperRank + 1, compare)\n        : new MaxHeap(array.length - lowerRank, compare); // (array.length - 1) - (lowerRank - 1)\n\n    processNumericArray(array, getter, value => {\n        if (Number.isNaN(value)) {\n            hasNaNs = true;\n        }\n\n        heap.add(value);\n        arrayLength++;\n    });\n\n    if (hasNaNs) {\n        return NaN;\n    }\n\n    // Adjust heap size and ranks when not all the values were accepted\n    if (array.length !== arrayLength) {\n        if (arrayLength === 0) {\n            return;\n        }\n\n        rank = k * (arrayLength - 1) / 100; // Apply a devision by 100 last to reduce a numerical error\n        lowerRank = Math.floor(rank);\n        upperRank = Math.ceil(rank);\n\n        const maxSize = k < 50\n            ? upperRank + 1\n            : arrayLength - lowerRank;\n\n        for (let i = heap.values.length; i > maxSize; i--) {\n            heap.extract();\n        }\n    }\n\n    if (lowerRank !== upperRank) {\n        const a = heap.extract();\n        const b = heap.values[0];\n\n        // Given that both MinHeap and MaxHeap are utilized, the order of values could be either\n        // ascending or descending. The following expression consistently uses the smaller value\n        // as the base for the result. This approach helps to minimize numerical error.\n        return a <= b\n            ? a + (b - a) * (rank - lowerRank)\n            : b + (a - b) * (rank - lowerRank);\n    }\n\n    return heap.values[0];\n}\n\nexport function median(array, getter, formula) {\n    return percentile(array, 50, getter, formula);\n}\n\n// console.log(percentile([1, 9, 4, 3, 2, 5, 6, 7, 8, 0, 10], 99.5));\n", "import { cmpNatural, getterToCmp } from './compare.js';\nimport { percentile as percentileMethod } from './percentile.js';\nimport { processNumericArray } from './process-numeric-array.js';\nimport { isArrayLike } from './misc.js';\n\nconst self = value => value;\n\nexport function sumAndCount(current, getter) {\n    let sum = undefined;\n    let correction = 0;\n    let count = 0;\n\n    processNumericArray(current, getter, num => {\n        count++;\n\n        if (sum === undefined) {\n            sum = num;\n        } else {\n            // Kahan\u2013Babu\u0161ka summation with respect for Infinity\n            // https://en.wikipedia.org/wiki/Kahan_summation_algorithm\n            const transition = sum;\n            const absTransition = Math.abs(transition);\n            const absNum = Math.abs(num);\n\n            sum += num;\n\n            if (absTransition !== Infinity && absNum !== Infinity) {\n                if (absTransition >= absNum) {\n                    correction += (transition - sum) + num;\n                } else {\n                    correction += (num - sum) + transition;\n                }\n            }\n        }\n    });\n\n    if (sum !== undefined) {\n        sum += correction;\n    }\n\n    return { sum, count };\n}\n\nexport function numbers(current, getter) {\n    // if (current && hasOwn(current, STAT_MARKER)) {\n    //     return current.input;\n    // }\n\n    const result = [];\n\n    processNumericArray(current, getter, result.push.bind(result));\n\n    return result;\n}\n\nexport function count(current, getter) {\n    let count = 0;\n\n    if (isArrayLike(current)) {\n        if (typeof getter !== 'function') {\n            getter = self;\n        }\n\n        for (const value of current) {\n            if (getter(value) !== undefined) {\n                count++;\n            }\n        }\n    }\n\n    return count;\n}\n\nexport function sum(current, getter) {\n    return sumAndCount(current, getter).sum;\n}\n\nexport function numbersSum(numbers) {\n    if (numbers.length === 0) {\n        return;\n    }\n\n    let sum = numbers[0];\n    let correction = 0;\n\n    for (let i = 1; i < numbers.length; i++) {\n        const num = numbers[i];\n\n        // Kahan\u2013Babu\u0161ka summation with respect for Infinity\n        // https://en.wikipedia.org/wiki/Kahan_summation_algorithm\n        const transition = sum;\n        const absTransition = Math.abs(transition);\n        const absNum = Math.abs(num);\n\n        sum += num;\n\n        if (absTransition !== Infinity && absNum !== Infinity) {\n            if (absTransition >= absNum) {\n                correction += (transition - sum) + num;\n            } else {\n                correction += (num - sum) + transition;\n            }\n        }\n    }\n\n    return sum + correction;\n}\n\nexport function mean(current, getter) {\n    const { sum, count } = sumAndCount(current, getter);\n\n    if (count > 0) {\n        return sum / count;\n    }\n}\n\nexport function variance(current, getter) {\n    let count = 0;\n    let mean = 0;\n    let M2 = 0;\n\n    // Welford's online algorithm\n    // https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford%27s_online_algorithm\n    processNumericArray(current, getter, num => {\n        count += 1;\n        let delta = num - mean;\n        mean += delta / count;\n        M2 += delta * (num - mean);\n    });\n\n    if (count > 0) {\n        return M2 / count;\n    }\n}\n\nexport function stdev(current, getter) {\n    const v = variance(current, getter);\n\n    if (v !== undefined) {\n        return Math.sqrt(v);\n    }\n}\n\nexport function min(current, cmp = cmpNatural) {\n    let min;\n\n    if (current && isFinite(current.length) && typeof cmp === 'function') {\n        cmp = getterToCmp(cmp, cmpNatural);\n\n        for (let i = 0; i < current.length; i++) {\n            const value = current[i];\n\n            if ((min === undefined || cmp(value, min) < 0) && cmp(value, undefined) !== 0) {\n                min = value;\n            }\n        }\n    }\n\n    return min;\n}\n\nexport function max(current, cmp = cmpNatural) {\n    let max;\n\n    if (current && isFinite(current.length) && typeof cmp === 'function') {\n        cmp = getterToCmp(cmp, cmpNatural);\n\n        for (let i = 0; i < current.length; i++) {\n            const value = current[i];\n\n            if ((max === undefined || cmp(value, max) >= 0) && cmp(value, undefined) !== 0) {\n                max = value;\n            }\n        }\n    }\n\n    return max;\n}\n\nexport function percentile(current, p, getter) {\n    // if (current && hasOwn(current, STAT_MARKER)) {\n    //     return numbersPercentile(current.input, p, getter);\n    // }\n    if (isArrayLike(current)) {\n        return percentileMethod(current, p, getter);\n    }\n}\n\nexport function median(current, getter) {\n    return percentile(current, 50, getter);\n}\n", "import buildin from './lang/compile-buildin.js';\nimport { cmp } from './utils/compare.js';\nimport { numbers, count, sum, mean, variance, stdev, min, max, percentile, median } from './utils/statistics.js';\nimport { hasOwn, addToSet, addToMapSet, isPlainObject, isRegExp } from './utils/misc.js';\n\nfunction noop() {}\n\nfunction self(value) {\n    return value;\n}\n\nfunction matchEntry(match) {\n    if (match === null) {\n        return null;\n    }\n\n    return {\n        matched: match.slice(),\n        start: match.index,\n        end: match.index + match[0].length,\n        input: match.input,\n        groups: match.groups || null\n    };\n}\n\nfunction replaceMatchEntry(args) {\n    const last = args.pop();\n    const groups = typeof last === 'string' ? null : last;\n    const input = groups === null ? last : args.pop();\n    const start = args.pop();\n\n    return {\n        matched: args,\n        start,\n        end: start + args[0].length,\n        input,\n        groups\n    };\n}\n\nconst replaceAll = String.prototype.replaceAll || function(pattern, replacement) {\n    return isRegExp(pattern)\n        ? this.replace(pattern, replacement)\n        : this.split(pattern).join(String(replacement));\n};\n\nconst stableSortSize = isSortStable(20) ? Infinity : isSortStable(10) ? 10 : 0;\n\nfunction isSortStable(n) {\n    return Array.from({ length: n }, (_, idx) => ({ idx }))\n        .sort((a, b) => (a.idx % 2) - (b.idx % 2))\n        .every((a, idx) =>\n            idx < n / 2 ? (a.idx >> 1 === idx) : Math.ceil(n / 2) + (a.idx >> 1) === idx\n        );\n}\n\nfunction stableSort(array, cmp) {\n    // check size, e.g. old v8 had stable sort only for arrays with length less or equal 10\n    if (array.length <= stableSortSize) {\n        return array.slice().sort(cmp);\n    }\n\n    return array\n        .map((value, idx) => ({ value, idx }))\n        .sort((a, b) =>\n            (a.value === undefined\n                ? b.value !== undefined\n                : b.value === undefined\n                    ? -1\n                    : cmp(a.value, b.value)) || (a.idx - b.idx)\n        )\n        .map(item => item.value);\n}\n\nexport default Object.freeze({\n    bool: buildin.bool,\n    filter: buildin.filter,\n    map: buildin.map,\n    pick: buildin.pick,\n    indexOf: buildin.indexOf,\n    lastIndexOf: buildin.lastIndexOf,\n    keys(current) {\n        return Object.keys(current || {});\n    },\n    values(current) {\n        const values = new Set();\n\n        for (const key in current) {\n            if (hasOwn(current, key)) {\n                addToSet(values, current[key]);\n            }\n        }\n\n        return [...values];\n    },\n    entries(current) {\n        const entries = [];\n\n        for (const key in current) {\n            if (hasOwn(current, key)) {\n                entries.push({ key, value: current[key] });\n            }\n        }\n\n        return entries;\n    },\n    fromEntries(current) {\n        const result = Object.create(null);\n\n        if (Array.isArray(current)) {\n            for (const entry of current) {\n                if (entry) {\n                    result[entry.key] = entry.value;\n                }\n            }\n        }\n\n        return result;\n    },\n    size(current) {\n        if (isPlainObject(current)) {\n            return Object.keys(current).length;\n        }\n\n        return (current && current.length) || 0;\n    },\n    sort(current, comparator = cmp) {\n        if (!Array.isArray(current)) {\n            return current;\n        }\n\n        if (typeof comparator === 'function' && comparator.length !== 2) {\n            const getter = comparator;\n\n            comparator = (a, b) => {\n                a = getter(a);\n                b = getter(b);\n\n                if (Array.isArray(a) && Array.isArray(b)) {\n                    if (a.length !== b.length) {\n                        return a.length < b.length ? -1 : 1;\n                    }\n\n                    for (let i = 0; i < a.length; i++) {\n                        const ret = cmp(a[i], b[i]);\n\n                        if (ret !== 0) {\n                            return ret;\n                        }\n                    }\n\n                    return 0;\n                }\n\n                return cmp(a, b);\n            };\n        }\n\n        return stableSort(current, comparator);\n    },\n    reverse(current) {\n        return Array.isArray(current)\n            ? current.slice().reverse()\n            : current;\n    },\n    slice(current, from, to) {\n        return buildin.slice(current, from, to);\n    },\n    group(current, keyGetter, valueGetter) {\n        const map = new Map();\n        const result = [];\n\n        if (typeof keyGetter !== 'function') {\n            keyGetter = noop;\n        }\n\n        if (typeof valueGetter !== 'function') {\n            valueGetter = self;\n        }\n\n        if (!Array.isArray(current)) {\n            current = [current];\n        }\n\n        for (const item of current) {\n            const keys = keyGetter(item);\n\n            if (Array.isArray(keys)) {\n                for (const key of keys) {\n                    addToMapSet(map, key, valueGetter(item));\n                }\n            } else {\n                addToMapSet(map, keys, valueGetter(item));\n            }\n        }\n\n        for (const [key, value] of map) {\n            result.push({ key, value: [...value] });\n        }\n\n        return result;\n    },\n    join(current, separator) {\n        return Array.isArray(current)\n            ? current.join(separator)\n            : String(current);\n    },\n    match(current, pattern, matchAll) {\n        const input = String(current);\n        const flags = isRegExp(pattern) ? pattern.flags : '';\n\n        if (matchAll || flags.includes('g')) {\n            const result = [];\n            let cursor = new RegExp(pattern, (flags || '').replace(/g|$/, 'g'));\n            let match;\n\n            while (match = cursor.exec(input)) {\n                result.push(matchEntry(match));\n            }\n\n            return result;\n        }\n\n        return matchEntry(input.match(pattern));\n    },\n    reduce(current, fn, initValue = undefined) {\n        if (Array.isArray(current)) {\n            return initValue !== undefined\n                ? current.reduce((res, current) => fn(current, res), initValue)\n                : current.reduce((res, current) => fn(current, res));\n        }\n\n        return fn(current, initValue);\n    },\n\n    // array/string\n    split(current, pattern) {\n        if (Array.isArray(current)) {\n            const patternFn = typeof pattern === 'function' ? pattern : Object.is.bind(null, pattern);\n            const result = [];\n            let start = 0;\n            let end = 0;\n\n            for (; end < current.length; end++) {\n                if (patternFn(current[end])) {\n                    result.push(current.slice(start, end));\n                    start = end + 1;\n                }\n            }\n\n            result.push(current.slice(start, end));\n\n            return result;\n        }\n\n        return String(current).split(pattern);\n    },\n    replace(current, pattern, replacement) {\n        if (Array.isArray(current)) {\n            const patternFn = typeof pattern === 'function' ? pattern : Object.is.bind(null, pattern);\n\n            return current.map(\n                typeof replacement === 'function'\n                    ? current => patternFn(current) ? replacement(current) : current\n                    : current => patternFn(current) ? replacement : current\n            );\n        }\n\n        if (isRegExp(pattern) && !pattern.flags.includes('g')) {\n            pattern = new RegExp(pattern, pattern.flags + 'g');\n        }\n\n        return replaceAll.call(\n            String(current),\n            pattern,\n            typeof replacement === 'function'\n                ? (...args) => replacement(replaceMatchEntry(args))\n                : replacement\n        );\n    },\n\n    // strings\n    toLowerCase(current, locales) {\n        return String(current).toLocaleLowerCase(locales);\n    },\n    toUpperCase(current, locales) {\n        return String(current).toLocaleUpperCase(locales);\n    },\n    trim(current) {\n        return String(current).trim();\n    },\n\n    // all Math static method with exclusion of 'max', 'min', 'log', `log1p` and 'random'\n    ...[\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh',\n        'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor',\n        'fround', 'hypot', 'imul', 'log10', 'log2', 'pow',\n        'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].reduce((res, method) => {\n        res[method] = Math[method];\n        return res;\n    }, {}),\n    ln: Math.log,\n    ln1p: Math.log1p,\n\n    // statistics\n    numbers,\n    count,\n    sum,\n    avg: mean,\n    variance,\n    stdev,\n    min,\n    max,\n    percentile,\n    p: percentile, // alias for percentile()\n    median\n});\n", "import { isPlainObject, isRegExp, isTruthy } from './utils/misc.js';\n\nexport default Object.freeze({\n    function: value => typeof value === 'function',\n    symbol: value => typeof value === 'symbol',\n    primitive: value => value === null || (typeof value !== 'object' && typeof value !== 'function'),\n    string: value => typeof value === 'string',\n    number: value => typeof value === 'number',\n    int: Number.isInteger,\n    finite: value => Number.isFinite(value),\n    nan: value => Number.isNaN(value),\n    infinity: value => value === Infinity || value === -Infinity,\n    boolean: value => value === true || value === false,\n    null: value => value === null,\n    undefined: value => value === undefined,\n    nullish: value => value === null || value === undefined,\n    object: isPlainObject,\n    array: Array.isArray,\n    regexp: isRegExp,\n    truthy: isTruthy,\n    falsy: value => !isTruthy(value)\n});\n", "import buildin from './lang/compile-buildin.js';\nimport { MaxHeap } from './utils/heap.js';\nimport { isPlainObject } from './utils/misc.js';\n\nconst contextToType = {\n    'path': 'property',\n    'key': 'value',\n    'value': 'value',\n    'in-value': 'value',\n    'value-subset': 'value',\n    'var': 'variable',\n    'assertion': 'assertion'\n};\n\nfunction addObjectKeysToSet(object, set) {\n    Object.keys(object).forEach(set.add, set);\n}\n\nfunction valuesToSuggestions(context, values, related, suggestions = new Set()) {\n    const addValue = value => {\n        switch (typeof value) {\n            case 'string':\n            case 'number':\n                suggestions.add(value);\n                break;\n        }\n    };\n\n    switch (context) {\n        case 'path': {\n            // use keys set to prevent duplications\n            const keys = new Set();\n\n            for (const value of values) {\n                if (Array.isArray(value)) {\n                    for (const item of value) {\n                        if (isPlainObject(item)) {\n                            addObjectKeysToSet(item, keys);\n                        }\n                    }\n                } else if (isPlainObject(value)) {\n                    addObjectKeysToSet(value, keys);\n                }\n            }\n\n            keys.forEach(suggestions.add, suggestions);\n\n            break;\n        }\n\n        case 'key': {\n            // use keys set to prevent duplications\n            const keys = new Set();\n\n            for (const value of values) {\n                if (value !== null && typeof value === 'object' && !Array.isArray(value)) {\n                    addObjectKeysToSet(value, keys);\n                }\n            }\n\n            keys.forEach(suggestions.add, suggestions);\n\n            break;\n        }\n\n        case 'value':\n            for (const value of values) {\n                addValue(value);\n            }\n            break;\n\n        case 'in-value': {\n            // use keys set to prevent duplications\n            const keys = new Set();\n\n            for (const value of values) {\n                if (Array.isArray(value)) {\n                    value.forEach(addValue);\n                } else if (isPlainObject(value)) {\n                    addObjectKeysToSet(value, keys);\n                }\n            }\n\n            keys.forEach(suggestions.add, suggestions);\n\n            break;\n        }\n\n        case 'var':\n            for (const value of values) {\n                suggestions.add('$' + value);\n            }\n            break;\n\n        case 'value-subset': {\n            const ignoreValues = new Set(related);\n\n            for (const value of values) {\n                if (!ignoreValues.has(value)) {\n                    addValue(value);\n                }\n            }\n\n            break;\n        }\n    }\n\n    return suggestions;\n}\n\nfunction findSourcePosRanges(source, pos, points, includeEmpty = false) {\n    const ranges = [];\n\n    for (let [from, to, context, values, related = null] of points) {\n        if (pos >= from && pos <= to && (includeEmpty || values.size || values.length)) {\n            let text = source.substring(from, to);\n\n            if (!/\\S/.test(text)) {\n                from = to = pos;\n                text = '';\n            }\n\n            ranges.push({\n                context,\n                from,\n                to,\n                text,\n                values,\n                related\n            });\n        }\n    }\n\n    return ranges;\n}\n\nfunction normalizeFunctionOption(value, fn) {\n    if (typeof value === 'function') {\n        return value;\n    }\n\n    if (value === true) {\n        return fn;\n    }\n\n    return false;\n}\n\nfunction normalizeFilterPattern(value) {\n    if (/^([\"']).*\\1$/.test(value)) {\n        try {\n            // convert 'string' -> \"string\"\n            // \\' -> '\n            // \"  -> \\\"\n            // \\. -> \\. (any other escaped char left as is)\n            if (value[0] === '\\'') {\n                value = `\"${value.slice(1, -1).replace(\n                    /\\\\.|\"/g,\n                    m => m === '\\\\\\'' ? '\\'' : m === '\"' ? '\\\\\\\"' : m\n                )}\"`;\n            }\n\n            return JSON.parse(value);\n        } catch (e) {}\n    }\n\n    return value;\n}\n\nfunction defaultFilterFactory(pattern) {\n    // 2022-04-08\n    // v8: includes() is 20-30% slower than indexOf() !== -1\n    // Firefox & Safari approximate the same\n    return value => (typeof value === 'string' ? value : String(value)).toLowerCase().indexOf(pattern) !== -1;\n}\n\nexport default (source, { value, stats, assertions }) => ({\n    get value() {\n        return value;\n    },\n    stat(pos, includeEmpty) {\n        return findSourcePosRanges(source, pos, stats, includeEmpty);\n    },\n    suggestion(pos, options) {\n        let { limit = Infinity, sort, filter: filterFactory } = options || {};\n        sort = normalizeFunctionOption(sort, buildin.cmp);\n        filterFactory = normalizeFunctionOption(filterFactory, defaultFilterFactory);\n\n        const storageType = sort && isFinite(limit) ? MaxHeap : Set;\n        const ranges = findSourcePosRanges(source, pos, stats, true);\n        const typeSuggestions = new Map();\n        const result = [];\n\n        for (const range of ranges) {\n            const { context, text, from, to, values, related } = range;\n            const type = contextToType[context];\n\n            if (!typeSuggestions.has(type)) {\n                let storage;\n\n                switch (storageType) {\n                    case MaxHeap:\n                        storage = new MaxHeap(\n                            limit,\n                            sort,\n                            filterFactory && filterFactory(normalizeFilterPattern(text))\n                        );\n                        break;\n\n                    case Set:\n                        storage = new Set();\n                        break;\n                }\n\n                typeSuggestions.set(type, {\n                    type,\n                    from,\n                    to,\n                    text,\n                    suggestions: storage\n                });\n            }\n\n            const { suggestions } = typeSuggestions.get(type);\n\n            switch (context) {\n                case 'assertion':\n                    if (suggestions.size === 0 || (suggestions.values && suggestions.values.length === 0)) {\n                        for (const value of Object.keys(assertions)) {\n                            suggestions.add(value);\n                        }\n                    }\n                    break;\n\n                default:\n                    valuesToSuggestions(context, values, related, suggestions);\n            }\n        }\n\n        if (storageType === Set) {\n            for (const entry of typeSuggestions.values()) {\n                let { suggestions } = entry;\n\n                if (sort) {\n                    suggestions = [...suggestions].sort(sort);\n                }\n\n                if (filterFactory || isFinite(limit)) {\n                    const result = [];\n                    const accept = filterFactory\n                        ? filterFactory(normalizeFilterPattern(entry.text))\n                        : () => true;\n\n                    for (const value of suggestions) {\n                        if (accept(value) && result.push(value) >= limit) {\n                            break;\n                        }\n                    }\n\n                    suggestions = result;\n                }\n\n                entry.suggestions = suggestions;\n            }\n        }\n\n        for (const entry of typeSuggestions.values()) {\n            entry.suggestions = Array.isArray(entry.suggestions)\n                ? entry.suggestions\n                : [...entry.suggestions];\n\n            if (entry.suggestions.length) {\n                result.push(entry);\n            }\n        }\n\n        return result.length ? result : null;\n    }\n});\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "src_default", "version", "hasOwn", "subject", "key", "toString", "addToSet", "set", "value", "item", "addToMapSet", "map", "getPropertyValue", "property", "isPlainObject", "isRegExp", "isArrayLike", "isTruthy", "lexer", "input", "state", "i", "yy", "yy_", "__lexelActionId", "YY_START", "YYSTATE", "token", "str", "details", "ch", "newline", "offset", "startLine", "startColumn", "rx", "line", "column", "prevLastIndex", "match", "start", "end", "newMatch", "firstLoc", "lastLoc", "n", "chunk", "newMatchLength", "pre", "post", "rule", "backup", "matchRuleId", "ruleId", "ruleInput", "tempMatch", "ret", "condition", "Parser", "tables", "unpackSubtable", "table", "refs", "last", "ref", "idx", "pattern", "_", "repl", "p", "d64", "decodeNums", "encoded", "nums", "j", "b1", "b2", "map", "indexTable", "indexRows", "stateTables", "decodedIndexRows", "row", "states", "decodedStateTables", "result", "rowIdx", "rowIndexes", "yytext", "yyleng", "yylineno", "yystate", "$$", "_$", "$0", "args", "hash", "error", "parseArgs", "popStack", "stack", "vstack", "lstack", "lex", "ranges", "sharedYY", "yyval", "yylloc", "tstack", "recovering", "symbol", "preErrorSymbol", "action", "locateNearestErrorRecoveryRule", "stackProbe", "depth", "errorRuleDepth", "errStr", "expected", "len", "first", "actionResult", "parser", "strictParser", "patch", "subject", "patches", "key", "humanTokens", "tokenForHumans", "parseError", "rawMessage", "message", "lineTerminator", "literals", "value", "m", "multiline", "valueEnd", "next", "hex", "flagsIndex", "flags", "flag", "array", "duplicateIndex", "origSetInput", "commentRanges", "ast", "tolerantParser", "keywords", "words", "operators", "prev", "defaultNext", "tokenPair", "origLex", "prevOffset", "nextToken", "lastN", "openBalance", "closeBalance", "balanceScopeLex", "source", "tolerantMode", "loc", "parse_default", "Arg1_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Array_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "Assertion_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "i", "Binary_exports", "__export", "compile", "stringify", "suggest", "walk", "binary", "valueSubset", "ctx", "values", "dict", "excludeValues", "type", "range", "value", "related", "node", "tmpVar", "Block_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "scopeStart", "sp", "Compare_exports", "__export", "compile", "stringify", "walk", "comparator", "node", "ctx", "cmpFn", "scopeStart", "sp", "CompareFunction_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Conditional_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Context_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Current_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "Data_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Declarator_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Definition_exports", "__export", "compile", "stringify", "suggest", "walk", "GetProperty", "value", "property", "Identifier", "name", "reservedVars", "suggest", "node", "ctx", "compile", "GetProperty", "Identifier", "walk", "stringify", "Filter_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "Function_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "GetProperty_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "Identifier_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Literal_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Map_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "MapRecursive_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "Method_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "relatedNode", "MethodCall_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Object_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "ObjectEntry_exports", "__export", "compile", "stringify", "suggest", "walk", "noBracketKeyType", "suggest", "node", "ctx", "compile", "value", "GetProperty", "Identifier", "walk", "stringify", "Parentheses_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Pick_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "pos", "Pipeline_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "Placeholder_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "Postfix_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "scopeStart", "sp", "Prefix_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "Reference_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "SliceNotation_exports", "__export", "compile", "stringify", "walk", "node", "ctx", "item", "arg", "a", "b", "c", "Spread_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "Template_exports", "__export", "compile", "stringify", "suggest", "walk", "node", "ctx", "idx", "v", "k", "encodeString", "compileEscape", "lastIdx", "stringifyEscape", "s", "map", "result", "i", "nodes", "Arg1_exports", "Array_exports", "Assertion_exports", "Binary_exports", "Block_exports", "Compare_exports", "Conditional_exports", "Context_exports", "Current_exports", "Data_exports", "Declarator_exports", "Definition_exports", "Filter_exports", "Function_exports", "GetProperty_exports", "Identifier_exports", "Literal_exports", "Map_exports", "MapRecursive_exports", "Method_exports", "MethodCall_exports", "Object_exports", "ObjectEntry_exports", "Parentheses_exports", "Pick_exports", "Pipeline_exports", "Placeholder_exports", "Postfix_exports", "Prefix_exports", "Reference_exports", "SliceNotation_exports", "CompareFunction_exports", "Spread_exports", "Template_exports", "extract", "type", "key", "value", "build", "compile", "walk", "stringify", "suggest", "walk", "ast", "options", "node", "enter", "ctx", "leave", "list", "isSuggestProhibitedChar", "str", "offset", "isWhiteSpace", "code", "onlyWsInRange", "start", "end", "getSuggestRanges", "from", "to", "input", "commentRanges", "noSuggestOnEofPos", "ranges", "i", "commentFrom", "commentTo", "processSuggestRanges", "suggestRanges", "source", "result", "type", "related", "j", "collectNodeSuggestions", "ast", "currentNode", "literalList", "suggestions", "add", "node", "range", "ctx", "values", "name", "walk", "suggest", "prevNode", "rawRanges", "isSimpleGetPropertyQuery", "node", "isSimpleMethodCallQuery", "stringify", "ast", "walk", "ctx", "buffer", "chunk", "list", "sep", "element", "idx", "createCustomError", "name", "message", "extensions", "error", "errorStack", "compile", "ast", "tolerant", "suggestions", "newStatPoint", "values", "spName", "spNames", "getNodeSpName", "node", "nodeSpName", "addSuggestPoint", "start", "end", "type", "related", "range", "ctx", "normalizedSuggestRanges", "createScope", "fn", "defCurrent", "prevScope", "scopeStart", "buffer", "stat", "walk", "relatedNode", "allocatedVars", "name", "lists", "initCtx", "usedBuildinMethods", "message", "error", "chunk", "list", "sep", "idx", "sp", "usedMethods", "usedAssertions", "providedAssertions", "assertion", "hasOwn", "providedMethods", "method", "s", "e", "createCustomError", "isSortableValue", "value", "safeCharCodeAt", "source", "offset", "isSign", "code", "isDigit", "isWS", "isDelim", "isWord", "isNumberStart", "first", "second", "third", "findEndOfType", "isType", "consumeNumber", "preventFloat", "expectedEnd", "sign", "getToken", "preventSign", "compare", "a", "b", "analytical", "offsetA", "offsetB", "postCmpResult", "postCmpResultType", "firstPart", "partA", "partB", "typeA", "lenA", "typeB", "lenB", "minLength", "substrDiff", "cA", "cB", "i", "numDiff", "afc", "bfc", "order", "sA", "sB", "siA", "siB", "createCompareFn", "naturalCompare", "naturalAnalyticalCompare", "TYPE_BOOLEAN", "TYPE_NAN", "TYPE_NUMBER", "TYPE_STRING", "TYPE_NULL", "TYPE_OBJECT", "TYPE_OTHER", "TYPE_UNDEFINED", "cmpType", "value", "cmp", "a", "b", "typeA", "typeB", "cmpAnalytical", "cmpNatural", "naturalCompare", "cmpNaturalAnalytical", "naturalAnalyticalCompare", "getterToCmp", "getter", "compile_buildin_default", "ensureArray", "isTruthy", "a", "b", "add", "sub", "mul", "div", "mod", "eq", "ne", "lt", "lte", "gt", "gte", "in_", "cmp", "cmpAnalytical", "cmpNatural", "cmpNaturalAnalytical", "match", "pick", "indexOf", "lastIndexOf", "map", "mapRecursive", "some", "filter", "slice", "value", "result", "item", "isPlainObject", "hasOwn", "internalIndexOf", "pattern", "isRegExp", "current", "ref", "i", "key", "dict", "fromIndex", "isArrayLike", "internalLastIndexOf", "getter", "fn", "getPropertyValue", "set", "addToSet", "from", "to", "step", "defaultMinCompare", "a", "b", "defaultMaxCompare", "Heap", "maxSize", "compare", "accept", "value", "array", "i", "topValue", "lastValue", "idx", "values", "idxValue", "parentIdx", "parentValue", "size", "halfSize", "largestIdx", "largestValue", "left", "leftValue", "right", "rightValue", "MaxHeap", "MinHeap", "self", "value", "toNumber", "processNumericArray", "current", "getter", "apply", "isArrayLike", "mappedValue", "percentile", "array", "k", "getter", "formula", "compare", "arrayLength", "rank", "lowerRank", "upperRank", "hasNaNs", "heap", "MinHeap", "MaxHeap", "processNumericArray", "value", "maxSize", "i", "a", "b", "self", "value", "sumAndCount", "current", "getter", "sum", "correction", "count", "processNumericArray", "num", "transition", "absTransition", "absNum", "numbers", "result", "isArrayLike", "mean", "current", "getter", "sum", "count", "sumAndCount", "variance", "M2", "processNumericArray", "num", "delta", "stdev", "v", "min", "cmp", "cmpNatural", "getterToCmp", "i", "value", "max", "percentile", "p", "isArrayLike", "median", "noop", "self", "value", "matchEntry", "match", "replaceMatchEntry", "args", "last", "groups", "input", "start", "replaceAll", "pattern", "replacement", "isRegExp", "stableSortSize", "isSortStable", "n", "_", "idx", "a", "b", "stableSort", "array", "cmp", "item", "methods_default", "compile_buildin_default", "current", "values", "key", "hasOwn", "addToSet", "entries", "result", "entry", "isPlainObject", "comparator", "getter", "ret", "from", "to", "keyGetter", "valueGetter", "map", "keys", "addToMapSet", "separator", "matchAll", "flags", "cursor", "fn", "initValue", "res", "patternFn", "end", "locales", "method", "numbers", "count", "sum", "mean", "variance", "stdev", "min", "max", "percentile", "median", "assertions_default", "value", "isPlainObject", "isRegExp", "isTruthy", "contextToType", "addObjectKeysToSet", "object", "set", "valuesToSuggestions", "context", "values", "related", "suggestions", "addValue", "value", "keys", "item", "isPlainObject", "ignoreValues", "findSourcePosRanges", "source", "pos", "points", "includeEmpty", "ranges", "from", "to", "text", "normalizeFunctionOption", "fn", "normalizeFilterPattern", "m", "defaultFilterFactory", "pattern", "stat_default", "stats", "assertions", "options", "limit", "sort", "filterFactory", "compile_buildin_default", "storageType", "MaxHeap", "typeSuggestions", "result", "range", "type", "storage", "entry", "accept", "cacheStrict", "cacheStrictStat", "cacheTollerant", "cacheTollerantStat", "defineDictFunction", "dict", "name", "fn", "queryMethods", "queryAssertions", "compiledFn", "compileFunction", "compile_buildin_default", "value", "current", "buildQueryMethodsAndAssertions", "customMethods", "customAssertions", "methods_default", "assertions_default", "hasOwn", "defaultDebugHandler", "sectionName", "source", "statMode", "tolerantMode", "debug", "parseResult", "parse_default", "stringify", "suggestions", "suggest", "esc", "s", "ranges", "node", "range", "prevRange", "prevPrefix", "a", "b", "start", "end", "type", "related", "prelude", "pre", "long", "compile", "createQuery", "options", "cache", "data", "context", "stat_default", "setup", "perform", "src_default", "version", "walk"]
}

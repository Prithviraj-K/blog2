/// <reference types="node" />
/// <reference types="node" />
import { ZlibOptions } from 'zlib';
import { Extension, ExtensionDescriptor } from '@statoscope/stats/spec/extension';
export type Compressor = string | {
    name: string;
    version: string;
};
export type Size = {
    compressor?: Compressor;
    size: number;
    meta?: unknown;
};
export type CompressFunction<TOptions = any> = (source: Buffer | string, filename: string, options?: TOptions) => Size;
export type Format = Extension<Payload>;
export type Resource = {
    id: string;
    size: Size;
};
export type Compilation = {
    id: string;
    resources: Array<Resource>;
};
export type Payload = {
    compilations: Array<Compilation>;
};
export type ResolvedCompressor = {
    compressor: CompressFunction<unknown>;
    params?: unknown;
};
export type CompressorOrPreset = string | ['gzip', ZlibOptions?] | CompressFunction;
export default class Generator {
    private adapter?;
    private sizeResolvers;
    private descriptor;
    private payload;
    private resolveCompilation;
    constructor(adapter?: ExtensionDescriptor | undefined);
    handleResource(compilationId: string, resourceId: string, source: Buffer | string, compressor: CompressorOrPreset): void;
    get(): Format;
    private resolveCompressor;
}

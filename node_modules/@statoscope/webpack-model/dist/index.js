"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareWithJora = exports.normalize = exports.joraHelpers = exports.module = void 0;
const jora_1 = require("@statoscope/helpers/dist/jora");
const jora_helpers_1 = __importDefault(require("./jora-helpers"));
exports.joraHelpers = jora_helpers_1.default;
const handleFile_1 = __importDefault(require("./handleFile"));
exports.normalize = handleFile_1.default;
exports.module = __importStar(require("./module"));
function prepareWithJora(stats, options = {}) {
    const normalizeResult = (0, handleFile_1.default)(stats);
    const { files, compilations } = normalizeResult;
    const prepared = (0, jora_1.prepareWithJora)(files, {
        helpers: {
            ...(0, jora_helpers_1.default)(normalizeResult, {
                query: (request, input, context) => prepared.query(request, input, context),
            }),
            ...options.helpers,
        },
    });
    return {
        files,
        compilations: compilations.map((c) => c.data),
        query: (query, data, context) => prepared.query(query, data, context),
    };
}
exports.prepareWithJora = prepareWithJora;
//# sourceMappingURL=index.js.map